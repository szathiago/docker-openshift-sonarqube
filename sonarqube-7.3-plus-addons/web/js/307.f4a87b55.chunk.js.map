{"version":3,"sources":["webpack:///./src/main/js/app/components/extensions/OrganizationPageExtension.tsx","webpack:///./src/main/js/api/user_groups.ts","webpack:///./src/main/js/apps/organizations/actions.ts"],"names":["OrganizationPageExtension","_super","_this","apply","this","arguments","refreshOrganization","props","organization","fetchOrganization","key","__extends","prototype","render","_a","params","extensionKey","pluginKey","pages","canAdmin","adminPages","concat","extension","find","p","react__WEBPACK_IMPORTED_MODULE_0__","_ExtensionContainer__WEBPACK_IMPORTED_MODULE_2__","location","options","_NotFound__WEBPACK_IMPORTED_MODULE_3__","withContainer","mapDispatchToProps","_apps_organizations_actions__WEBPACK_IMPORTED_MODULE_5__","__webpack_exports__","Object","react_redux__WEBPACK_IMPORTED_MODULE_1__","state","ownProps","_store_rootReducer__WEBPACK_IMPORTED_MODULE_4__","organizationKey","searchUsersGroups","data","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","catch","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","getUsersInGroup","addUserToGroup","removeUserFromGroup","createGroup","then","r","group","updateGroup","deleteGroup","dispatch","Promise","all","_api_organizations__WEBPACK_IMPORTED_MODULE_0__","navigation","organizationWithPermissions","__assign","_store_organizations_duck__WEBPACK_IMPORTED_MODULE_1__","_store_rootActions__WEBPACK_IMPORTED_MODULE_5__","fetchOrganizationGroups","_api_user_groups__WEBPACK_IMPORTED_MODULE_3__","response","groups","createOrganization","_store_globalMessages_duck__WEBPACK_IMPORTED_MODULE_7__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_8__","name","error","reject","onRejected","updateOrganization","changes","deleteOrganization","fetchMembers","receiveAction","_store_organizationsMembers_actions__WEBPACK_IMPORTED_MODULE_2__","loading","undefined","ps","q","users","total","paging","pageIndex","query","fetchOrganizationMembers","fetchMoreOrganizationMembers","getState","_store_rootReducer__WEBPACK_IMPORTED_MODULE_6__","addOrganizationMember","member","login","user","removeOrganizationMember","updateOrganizationMemberGroups","add","remove","_store_users_actions__WEBPACK_IMPORTED_MODULE_4__","groupCount","length","promises","map"],"mappings":"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","file":"js/307.f4a87b55.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport ExtensionContainer from './ExtensionContainer';\nimport NotFound from '../NotFound';\nimport { getOrganizationByKey } from '../../../store/rootReducer';\nimport { fetchOrganization } from '../../../apps/organizations/actions';\nimport { Organization } from '../../types';\n\ninterface StateToProps {\n  organization?: Organization;\n}\n\ninterface DispatchProps {\n  fetchOrganization: (organizationKey: string) => void;\n}\n\ninterface OwnProps {\n  location: {};\n  params: {\n    extensionKey: string;\n    organizationKey: string;\n    pluginKey: string;\n  };\n}\n\ntype Props = OwnProps & StateToProps & DispatchProps;\n\nclass OrganizationPageExtension extends React.PureComponent<Props> {\n  refreshOrganization = () =>\n    this.props.organization && this.props.fetchOrganization(this.props.organization.key);\n\n  render() {\n    const { extensionKey, pluginKey } = this.props.params;\n    const { organization } = this.props;\n\n    if (!organization) {\n      return null;\n    }\n\n    let pages = organization.pages || [];\n    if (organization.canAdmin && organization.adminPages) {\n      pages = pages.concat(organization.adminPages);\n    }\n\n    const extension = pages.find(p => p.key === `${pluginKey}/${extensionKey}`);\n    return extension ? (\n      <ExtensionContainer\n        extension={extension}\n        location={this.props.location}\n        options={{ organization, refreshOrganization: this.refreshOrganization }}\n      />\n    ) : (\n      <NotFound withContainer={false} />\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: OwnProps) => ({\n  organization: getOrganizationByKey(state, ownProps.params.organizationKey)\n});\n\nconst mapDispatchToProps = { fetchOrganization };\n\nexport default connect<StateToProps, DispatchProps, OwnProps>(mapStateToProps, mapDispatchToProps)(\n  OrganizationPageExtension\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from '../helpers/request';\nimport { Paging, Group } from '../app/types';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function searchUsersGroups(data: {\n  f?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n}): Promise<{ groups: Group[]; paging: Paging }> {\n  return getJSON('/api/user_groups/search', data).catch(throwGlobalError);\n}\n\nexport interface GroupUser {\n  login: string;\n  name: string;\n  selected: boolean;\n}\n\nexport function getUsersInGroup(data: {\n  id?: number;\n  name?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n  selected?: string;\n}): Promise<{ paging: Paging; users: GroupUser[] }> {\n  return getJSON('/api/user_groups/users', data).catch(throwGlobalError);\n}\n\nexport function addUserToGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/add_user', data).catch(throwGlobalError);\n}\n\nexport function removeUserFromGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/remove_user', data).catch(throwGlobalError);\n}\n\nexport function createGroup(data: {\n  description?: string;\n  organization: string | undefined;\n  name: string;\n}): Promise<Group> {\n  return postJSON('/api/user_groups/create', data).then(r => r.group, throwGlobalError);\n}\n\nexport function updateGroup(data: { description?: string; id: number; name?: string }) {\n  return post('/api/user_groups/update', data).catch(throwGlobalError);\n}\n\nexport function deleteGroup(data: { name: string; organization: string | undefined }) {\n  return post('/api/user_groups/delete', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport * as api from '../../api/organizations';\nimport * as actions from '../../store/organizations/duck';\nimport * as membersActions from '../../store/organizationsMembers/actions';\nimport { searchUsersGroups, addUserToGroup, removeUserFromGroup } from '../../api/user_groups';\nimport { receiveUser } from '../../store/users/actions';\nimport { onFail } from '../../store/rootActions';\nimport { getOrganizationMembersState } from '../../store/rootReducer';\nimport { addGlobalSuccessMessage } from '../../store/globalMessages/duck';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\nimport { Organization, OrganizationMember, OrganizationBase } from '../../app/types';\n\nconst PAGE_SIZE = 50;\n\nconst onRejected = (dispatch: Dispatch<any>) => (error: any) => {\n  onFail(dispatch)(error);\n  return Promise.reject(error);\n};\n\nexport const fetchOrganization = (key: string) => (dispatch: Dispatch<any>) => {\n  return Promise.all([api.getOrganization(key), api.getOrganizationNavigation(key)]).then(\n    ([organization, navigation]) => {\n      if (organization) {\n        const organizationWithPermissions = { ...organization, ...navigation };\n        dispatch(actions.receiveOrganizations([organizationWithPermissions]));\n      }\n    },\n    onFail(dispatch)\n  );\n};\n\nexport const fetchOrganizationGroups = (organization: string) => (dispatch: Dispatch<any>) => {\n  return searchUsersGroups({ organization }).then(response => {\n    dispatch(actions.receiveOrganizationGroups(organization, response.groups));\n  }, onFail(dispatch));\n};\n\nexport const createOrganization = (organization: OrganizationBase) => (dispatch: Dispatch<any>) => {\n  return api.createOrganization(organization).then((organization: Organization) => {\n    dispatch(actions.createOrganization(organization));\n    dispatch(\n      addGlobalSuccessMessage(translateWithParameters('organization.created', organization.name))\n    );\n    return organization;\n  }, onRejected(dispatch));\n};\n\nexport const updateOrganization = (key: string, changes: OrganizationBase) => (\n  dispatch: Dispatch<any>\n) => {\n  return api.updateOrganization(key, changes).then(() => {\n    dispatch(actions.updateOrganization(key, changes));\n    dispatch(addGlobalSuccessMessage(translate('organization.updated')));\n  }, onFail(dispatch));\n};\n\nexport const deleteOrganization = (key: string) => (dispatch: Dispatch<any>) => {\n  return api.deleteOrganization(key).then(() => {\n    dispatch(actions.deleteOrganization(key));\n    dispatch(addGlobalSuccessMessage(translate('organization.deleted')));\n  }, onFail(dispatch));\n};\n\nconst fetchMembers = (\n  data: {\n    organization: string;\n    p?: number;\n    ps?: number;\n    q?: string;\n  },\n  dispatch: Dispatch<any>,\n  receiveAction: Function\n) => {\n  dispatch(membersActions.updateState(data.organization, { loading: true }));\n  if (data.ps === undefined) {\n    data.ps = PAGE_SIZE;\n  }\n  if (!data.q) {\n    data.q = undefined;\n  }\n  return api.searchMembers(data).then(\n    response => {\n      dispatch(\n        receiveAction(data.organization, response.users, {\n          loading: false,\n          total: response.paging.total,\n          pageIndex: response.paging.pageIndex,\n          query: data.q || null\n        })\n      );\n    },\n    (error: any) => {\n      onFail(dispatch)(error);\n      dispatch(membersActions.updateState(data.organization, { loading: false }));\n    }\n  );\n};\n\nexport const fetchOrganizationMembers = (key: string, query?: string) => (\n  dispatch: Dispatch<any>\n) => fetchMembers({ organization: key, q: query }, dispatch, membersActions.receiveMembers);\n\nexport const fetchMoreOrganizationMembers = (key: string, query?: string) => (\n  dispatch: Dispatch<any>,\n  getState: () => any\n) =>\n  fetchMembers(\n    { organization: key, p: getOrganizationMembersState(getState(), key).pageIndex + 1, q: query },\n    dispatch,\n    membersActions.receiveMoreMembers\n  );\n\nexport const addOrganizationMember = (key: string, member: OrganizationMember) => (\n  dispatch: Dispatch<any>\n) => {\n  return api\n    .addMember({ login: member.login, organization: key })\n    .then(user => dispatch(membersActions.addMember(key, user)), onFail(dispatch));\n};\n\nexport const removeOrganizationMember = (key: string, member: OrganizationMember) => (\n  dispatch: Dispatch<any>\n) => {\n  dispatch(membersActions.removeMember(key, member));\n  return api.removeMember({ login: member.login, organization: key }).catch((error: any) => {\n    onFail(dispatch)(error);\n    dispatch(membersActions.addMember(key, member));\n  });\n};\n\nexport const updateOrganizationMemberGroups = (\n  organization: Organization,\n  member: OrganizationMember,\n  add: string[],\n  remove: string[]\n) => (dispatch: Dispatch<any>) => {\n  dispatch(\n    receiveUser({\n      ...member,\n      groupCount: (member.groupCount || 0) + add.length - remove.length\n    })\n  );\n  const promises = [\n    ...add.map(name =>\n      addUserToGroup({ name, login: member.login, organization: organization.key })\n    ),\n    ...remove.map(name =>\n      removeUserFromGroup({ name, login: member.login, organization: organization.key })\n    )\n  ];\n  return Promise.all(promises).catch(error => {\n    dispatch(receiveUser(member));\n    onFail(dispatch)(error);\n  });\n};\n"],"sourceRoot":""}