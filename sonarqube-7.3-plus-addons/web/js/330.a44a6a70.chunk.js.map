{"version":3,"sources":["webpack:///./src/main/js/apps/account/profile/UserExternalIdentity.js","webpack:///./src/main/js/apps/account/profile/UserGroups.js","webpack:///./src/main/js/apps/account/profile/UserScmAccounts.js","webpack:///./src/main/js/apps/account/profile/Profile.js"],"names":["_super","UserExternalIdentity","_this","apply","this","arguments","state","loading","__extends","prototype","componentDidMount","mounted","fetchIdentityProviders","componentDidUpdate","prevProps","user","props","componentWillUnmount","setState","Object","users","then","r","identityProviders","providers","identityProvider","find","provider","key","externalProvider","catch","render","_a","index_js_exposed_default","a","createElement","className","style","backgroundColor","color","colors","theme","src","window","baseUrl","iconPath","width","height","alt","name","externalIdentity","PureComponent","UserGroups","UserGroups_extends","groups","l10n","id","map","group","title","propTypes","prop_types_default","arrayOf","string","isRequired","UserScmAccounts","UserScmAccounts_extends","scmAccounts","login","email","scmAccount","object","__webpack_exports__","es","customOrganizations","rootReducer","local","profile_UserExternalIdentity","profile_UserGroups","profile_UserScmAccounts"],"mappings":"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","file":"js/330.a44a6a70.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport { getIdentityProviders } from '../../../api/users';\nimport * as theme from '../../../app/theme';\nimport { getTextColor } from '../../../helpers/colors';\n\nexport default class UserExternalIdentity extends React.PureComponent {\n  state = {\n    loading: true\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchIdentityProviders();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.user !== this.props.user) {\n      this.this.fetchIdentityProviders();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchIdentityProviders() {\n    this.setState({ loading: true });\n    getIdentityProviders()\n      .then(r => r.identityProviders)\n      .then(providers => {\n        if (this.mounted) {\n          const identityProvider = providers.find(\n            provider => provider.key === this.props.user.externalProvider\n          );\n          this.setState({ loading: false, identityProvider });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  }\n\n  render() {\n    const { user } = this.props;\n    const { loading, identityProvider } = this.state;\n\n    if (loading) {\n      return null;\n    }\n\n    if (!identityProvider) {\n      return (\n        <div>\n          {user.externalProvider}\n          {': '}\n          {user.externalIdentity}\n        </div>\n      );\n    }\n\n    return (\n      <div\n        className=\"identity-provider\"\n        style={{\n          backgroundColor: identityProvider.backgroundColor,\n          color: getTextColor(identityProvider.backgroundColor, theme.secondFontColor)\n        }}>\n        <img\n          className=\"little-spacer-right\"\n          src={window.baseUrl + identityProvider.iconPath}\n          width=\"14\"\n          height=\"14\"\n          alt={identityProvider.name}\n        />{' '}\n        {user.externalIdentity}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from '../../../helpers/l10n';\n\nexport default class UserGroups extends React.PureComponent {\n  static propTypes = {\n    groups: PropTypes.arrayOf(PropTypes.string).isRequired\n  };\n\n  render() {\n    const { groups } = this.props;\n\n    return (\n      <div>\n        <h2 className=\"spacer-bottom\">{translate('my_profile.groups')}</h2>\n        <ul id=\"groups\">\n          {groups.map(group => (\n            <li key={group} className=\"little-spacer-bottom\" title={group}>\n              {group}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from '../../../helpers/l10n';\n\nexport default class UserScmAccounts extends React.PureComponent {\n  static propTypes = {\n    user: PropTypes.object.isRequired,\n    scmAccounts: PropTypes.arrayOf(PropTypes.string).isRequired\n  };\n\n  render() {\n    const { user, scmAccounts } = this.props;\n\n    return (\n      <div>\n        <h2 className=\"spacer-bottom\">{translate('my_profile.scm_accounts')}</h2>\n        <ul id=\"scm-accounts\">\n          <li className=\"little-spacer-bottom text-ellipsis\" title={user.login}>\n            {user.login}\n          </li>\n\n          {user.email && (\n            <li className=\"little-spacer-bottom text-ellipsis\" title={user.email}>\n              {user.email}\n            </li>\n          )}\n\n          {scmAccounts.map(scmAccount => (\n            <li key={scmAccount} className=\"little-spacer-bottom\" title={scmAccount}>\n              {scmAccount}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport UserExternalIdentity from './UserExternalIdentity';\nimport UserGroups from './UserGroups';\nimport UserScmAccounts from './UserScmAccounts';\nimport { getCurrentUser, areThereCustomOrganizations } from '../../../store/rootReducer';\nimport { translate } from '../../../helpers/l10n';\n\n/*::\ntype Props = {\n  customOrganizations: boolean,\n  user: {\n    email?: string,\n    externalProvider?: string,\n    groups: Array<*>,\n    local: boolean,\n    login: string,\n    scmAccounts: Array<*>\n  }\n};\n*/\n\nfunction Profile(props /*: Props */) {\n  const { customOrganizations, user } = props;\n\n  return (\n    <div className=\"account-body account-container\">\n      <div className=\"boxed-group boxed-group-inner\">\n        <div className=\"spacer-bottom\">\n          {translate('login')}: <strong id=\"login\">{user.login}</strong>\n        </div>\n\n        {!user.local &&\n          user.externalProvider !== 'sonarqube' && (\n            <div id=\"identity-provider\" className=\"spacer-bottom\">\n              <UserExternalIdentity user={user} />\n            </div>\n          )}\n\n        {!!user.email && (\n          <div className=\"spacer-bottom\">\n            {translate('my_profile.email')}: <strong id=\"email\">{user.email}</strong>\n          </div>\n        )}\n\n        {!customOrganizations && <hr className=\"account-separator\" />}\n        {!customOrganizations && <UserGroups groups={user.groups} />}\n\n        <hr />\n\n        <UserScmAccounts user={user} scmAccounts={user.scmAccounts} />\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  customOrganizations: areThereCustomOrganizations(state),\n  user: getCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(Profile);\n"],"sourceRoot":""}