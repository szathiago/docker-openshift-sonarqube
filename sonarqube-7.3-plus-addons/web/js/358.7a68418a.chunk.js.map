{"version":3,"sources":["webpack:///./src/main/js/app/components/extensions/ProjectAdminPageExtension.js"],"names":["mapDispatchToProps","onFail","__webpack_exports__","Object","react_redux__WEBPACK_IMPORTED_MODULE_1__","props","_a","params","extensionKey","pluginKey","component","extension","configuration","extensions","find","p","key","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_ExtensionContainer__WEBPACK_IMPORTED_MODULE_2__","options","_NotFound__WEBPACK_IMPORTED_MODULE_3__","withContainer"],"mappings":"oJAsDA,IAAMA,GAAuBC,cAAQ,GAErCC,EAAA,QAAeC,OAAAC,EAAA,QAAAD,CAAQ,KAAMH,EAA7B,CAfA,SAAmCK,GAC3B,IAAAC,EAAAD,EAAAE,OAAEC,EAAAF,EAAAE,aAAcC,EAAAH,EAAAG,UACdC,EAAAL,EAAAK,UACFC,EACJD,EAAUE,eACVF,EAAUE,cAAcC,WAAWC,KAAK,SAAAC,GAAK,OAAAA,EAAEC,MAAWP,EAAS,IAAtBD,IAC/C,OAAOG,EACLM,EAAAC,EAAAC,cAACC,EAAA,GAAmBT,UAAWA,EAAWU,SAAWX,UAASA,KAE9DO,EAAAC,EAAAC,cAACG,EAAA,SAASC,eAAe","file":"js/358.7a68418a.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ExtensionContainer from './ExtensionContainer';\nimport NotFound from '../NotFound';\nimport { addGlobalErrorMessage } from '../../../store/globalMessages/duck';\n\n/*::\ntype Props = {\n  component: {\n    configuration?: {\n      extensions: Array<{ key: string }>\n    }\n  },\n  location: { query: { id: string } },\n  params: {\n    extensionKey: string,\n    pluginKey: string\n  }\n};\n*/\n\nfunction ProjectAdminPageExtension(props /*: Props */) {\n  const { extensionKey, pluginKey } = props.params;\n  const { component } = props;\n  const extension =\n    component.configuration &&\n    component.configuration.extensions.find(p => p.key === `${pluginKey}/${extensionKey}`);\n  return extension ? (\n    <ExtensionContainer extension={extension} options={{ component }} />\n  ) : (\n    <NotFound withContainer={false} />\n  );\n}\n\nconst mapDispatchToProps = { onFail: addGlobalErrorMessage };\n\nexport default connect(null, mapDispatchToProps)(ProjectAdminPageExtension);\n"],"sourceRoot":""}