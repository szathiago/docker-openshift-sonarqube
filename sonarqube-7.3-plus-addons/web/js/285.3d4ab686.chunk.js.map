{"version":3,"sources":["webpack:///./src/main/js/apps/settings/encryption/GenerateSecretKeyForm.js","webpack:///./src/main/js/apps/settings/encryption/EncryptionForm.js","webpack:///./src/main/js/apps/settings/encryption/EncryptionApp.js","webpack:///./src/main/js/apps/settings/encryption/EncryptionAppContainer.js"],"names":["_super","GenerateSecretKeyForm","_this","apply","this","arguments","handleSubmit","e","preventDefault","props","generateSecretKey","__extends","prototype","render","index_js_exposed_default","a","createElement","id","secretKey","className","Object","l10n","readOnly","type","value","dangerouslySetInnerHTML","__html","onSubmit","buttons","propTypes","prop_types_default","string","func","isRequired","PureComponent","EncryptionForm","state","EncryptionForm_extends","handleEncrypt","encryptValue","handleGenerateNewKey","autoFocus","onChange","setState","target","required","rows","encryptedValue","EncryptionApp","EncryptionApp_extends","componentDidMount","checkSecretKey","Helmet_default","title","loading","secretKeyAvailable","encryption_GenerateSecretKeyForm","encryption_EncryptionForm","startGeneration","bool","__webpack_exports__","es","rootReducer","actions","encryption_EncryptionApp"],"mappings":"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","file":"js/285.3d4ab686.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from '../../../helpers/l10n';\nimport { SubmitButton } from '../../../components/ui/buttons';\n\nexport default class GenerateSecretKeyForm extends React.PureComponent {\n  static propTypes = {\n    secretKey: PropTypes.string,\n    generateSecretKey: PropTypes.func.isRequired\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.generateSecretKey();\n  };\n\n  render() {\n    return (\n      <div id=\"generate-secret-key-form-container\">\n        {this.props.secretKey != null ? (\n          <div>\n            <div className=\"big-spacer-bottom\">\n              <h3 className=\"spacer-bottom\">{translate('encryption.secret_key')}</h3>\n              <input\n                className=\"input-large\"\n                id=\"secret-key\"\n                readOnly={true}\n                type=\"text\"\n                value={this.props.secretKey}\n              />\n            </div>\n\n            <h3 className=\"spacer-bottom\">{translate('encryption.how_to_use')}</h3>\n\n            <div\n              className=\"markdown\"\n              dangerouslySetInnerHTML={{ __html: translate('encryption.how_to_use.content') }}\n            />\n          </div>\n        ) : (\n          <div>\n            <p\n              className=\"spacer-bottom\"\n              dangerouslySetInnerHTML={{ __html: translate('ecryption.secret_key_description') }}\n            />\n\n            <form id=\"generate-secret-key-form\" onSubmit={this.handleSubmit}>\n              <SubmitButton>{translate('encryption.generate_secret_key')}</SubmitButton>\n            </form>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from '../../../helpers/l10n';\nimport { SubmitButton } from '../../../components/ui/buttons';\n\nexport default class EncryptionForm extends React.PureComponent {\n  static propTypes = {\n    encryptedValue: PropTypes.string,\n    encryptValue: PropTypes.func.isRequired,\n    generateSecretKey: PropTypes.func.isRequired\n  };\n\n  state = { value: '' };\n\n  handleEncrypt(e) {\n    e.preventDefault();\n    this.props.encryptValue(this.state.value);\n  }\n\n  handleGenerateNewKey(e) {\n    e.preventDefault();\n    this.props.generateSecretKey();\n  }\n\n  render() {\n    return (\n      <div id=\"encryption-form-container\">\n        <div className=\"spacer-bottom\">{translate('encryption.form_intro')}</div>\n\n        <form\n          className=\"big-spacer-bottom\"\n          id=\"encryption-form\"\n          onSubmit={e => this.handleEncrypt(e)}>\n          <textarea\n            autoFocus={true}\n            className=\"input-super-large\"\n            id=\"encryption-form-value\"\n            onChange={e => this.setState({ value: e.target.value })}\n            required={true}\n            rows={3}\n            value={this.state.value}\n          />\n          <div className=\"spacer-top\">\n            <SubmitButton>{translate('encryption.encrypt')}</SubmitButton>\n          </div>\n        </form>\n\n        {this.props.encryptedValue != null && (\n          <div>\n            {translate('encryption.encrypted_value')}\n            {': '}\n            <input\n              className=\"input-clear input-code input-super-large\"\n              id=\"encrypted-value\"\n              readOnly={true}\n              type=\"text\"\n              value={this.props.encryptedValue}\n            />\n          </div>\n        )}\n\n        <div className=\"huge-spacer-top bordered-top\">\n          <div\n            className=\"big-spacer-top spacer-bottom\"\n            dangerouslySetInnerHTML={{ __html: translate('encryption.form_note') }}\n          />\n          <form id=\"encryption-new-key-form\" onSubmit={e => this.handleGenerateNewKey(e)}>\n            <SubmitButton>{translate('encryption.generate_new_secret_key')}</SubmitButton>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport GenerateSecretKeyForm from './GenerateSecretKeyForm';\nimport EncryptionForm from './EncryptionForm';\nimport { translate } from '../../../helpers/l10n';\n\nexport default class EncryptionApp extends React.PureComponent {\n  static propTypes = {\n    loading: PropTypes.bool.isRequired,\n    secretKeyAvailable: PropTypes.bool,\n    secretKey: PropTypes.string,\n    encryptedValue: PropTypes.string,\n\n    checkSecretKey: PropTypes.func.isRequired,\n    generateSecretKey: PropTypes.func.isRequired,\n    encryptValue: PropTypes.func.isRequired,\n    startGeneration: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    this.props.checkSecretKey();\n  }\n\n  render() {\n    return (\n      <div id=\"encryption-page\" className=\"page page-limited\">\n        <Helmet title={translate('property.category.security.encryption')} />\n        <header className=\"page-header\">\n          <h1 className=\"page-title\">{translate('property.category.security.encryption')}</h1>\n          {this.props.loading && <i className=\"spinner\" />}\n        </header>\n\n        {!this.props.loading &&\n          !this.props.secretKeyAvailable && (\n            <GenerateSecretKeyForm\n              secretKey={this.props.secretKey}\n              generateSecretKey={this.props.generateSecretKey}\n            />\n          )}\n\n        {this.props.secretKeyAvailable && (\n          <EncryptionForm\n            encryptedValue={this.props.encryptedValue}\n            encryptValue={this.props.encryptValue}\n            generateSecretKey={this.props.startGeneration}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport EncryptionApp from './EncryptionApp';\nimport {\n  checkSecretKey,\n  generateSecretKey,\n  encryptValue,\n  startGeneration\n} from '../store/encryptionPage/actions';\nimport { getSettingsAppEncryptionState } from '../../../store/rootReducer';\n\nexport default connect(state => getSettingsAppEncryptionState(state), {\n  checkSecretKey,\n  generateSecretKey,\n  encryptValue,\n  startGeneration\n})(EncryptionApp);\n"],"sourceRoot":""}