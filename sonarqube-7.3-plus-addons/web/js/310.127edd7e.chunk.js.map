{"version":3,"sources":["webpack:///./src/main/js/apps/organizations/components/OrganizationAccessContainer.tsx","webpack:///./src/main/js/app/utils/handleRequiredAuthorization.js"],"names":["OrganizationAccess","_super","_this","apply","this","arguments","checkPermissions","props","hasAccess","Object","_app_utils_handleRequiredAuthorization__WEBPACK_IMPORTED_MODULE_3__","__extends","prototype","componentDidMount","componentDidUpdate","render","react__WEBPACK_IMPORTED_MODULE_0__","children","location","organization","OrganizationAccessContainer","react_redux__WEBPACK_IMPORTED_MODULE_1__","state","ownProps","currentUser","_store_rootReducer__WEBPACK_IMPORTED_MODULE_2__","params","organizationKey","hasAdminAccess","_a","isAdmin","_app_types__WEBPACK_IMPORTED_MODULE_4__","canAdmin","Boolean","OrganizationAdminAccess","__assign","__webpack_exports__","store","_getStore__WEBPACK_IMPORTED_MODULE_0__","history","_getHistory__WEBPACK_IMPORTED_MODULE_1__","returnTo","window","pathname","search","hash","dispatch","_store_appState_duck__WEBPACK_IMPORTED_MODULE_2__","replace","query","return_to"],"mappings":"ouBAuCAA,EAAA,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA,OAAAD,KAAAE,MAAAC,KAAAC,YAAAD,YASEF,EAAAI,iBAAmB,WACZJ,EAAKK,MAAMC,UAAUN,EAAKK,QAC7BE,OAAAC,EAAA,EAAAD,MAaN,OAxBwCE,EAAAX,EAAAC,GACtCD,EAAAY,UAAAC,kBAAA,WACET,KAAKE,oBAGPN,EAAAY,UAAAE,mBAAA,WACEV,KAAKE,oBASPN,EAAAY,UAAAG,OAAA,WACE,OAAKX,KAAKG,MAAMC,UAAUJ,KAAKG,OAGxBS,EAAA,aAAmBZ,KAAKG,MAAMU,UACnCC,SAAUd,KAAKG,MAAMW,SACrBC,aAAcf,KAAKG,MAAMY,eAJlB,MAObnB,EAxBA,CAAwCgB,EAAA,eA+BlCI,EAA8BX,OAAAY,EAAA,QAAAZ,CALZ,SAACa,EAAYC,GAAuB,OAC1DC,YAAaf,OAAAgB,EAAA,eAAAhB,CAAea,GAC5BH,aAAcV,OAAAgB,EAAA,qBAAAhB,CAAqBa,EAAOC,EAASG,OAAOC,mBAGxBlB,CAClCT,GAGI,SAAA4B,EAAyBC,OAC7BL,EAAAK,EAAAL,YACAL,EAAAU,EAAAV,aAEMW,EAAUrB,OAAAsB,EAAA,EAAAtB,CAAWe,IAAgBL,GAAgBA,EAAaa,SACxE,OAAOC,QAAQH,GAGX,SAAAI,EAAkC3B,GACtC,OAAOS,EAAA,cAACI,EAA2Be,GAAC3B,UAAWoB,GAAoBrB,sEC3DrE6B,EAAA,aACE,IAAMC,EAAQ5B,OAAA6B,EAAA,QAAA7B,GACR8B,EAAU9B,OAAA+B,EAAA,EAAA/B,GAEVgC,EAAWC,OAAOxB,SAASyB,SAAWD,OAAOxB,SAAS0B,OAASF,OAAOxB,SAAS2B,KAErFR,EAAMS,SAASrC,OAAAsC,EAAA,EAAAtC,IACf8B,EAAQS,SACNL,SAAU,gBACVM,OAASC,UAAWT","file":"js/310.127edd7e.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { RouterState } from 'react-router';\nimport { getCurrentUser, getOrganizationByKey } from '../../../store/rootReducer';\nimport handleRequiredAuthorization from '../../../app/utils/handleRequiredAuthorization';\nimport { Organization, CurrentUser, isLoggedIn } from '../../../app/types';\n\ninterface StateToProps {\n  currentUser: CurrentUser;\n  organization?: Organization;\n}\n\ninterface OwnProps extends RouterState {\n  children: JSX.Element;\n}\n\ninterface Props extends StateToProps, Pick<OwnProps, 'children' | 'location'> {\n  hasAccess: (props: Props) => boolean;\n}\n\nexport class OrganizationAccess extends React.PureComponent<Props> {\n  componentDidMount() {\n    this.checkPermissions();\n  }\n\n  componentDidUpdate() {\n    this.checkPermissions();\n  }\n\n  checkPermissions = () => {\n    if (!this.props.hasAccess(this.props)) {\n      handleRequiredAuthorization();\n    }\n  };\n\n  render() {\n    if (!this.props.hasAccess(this.props)) {\n      return null;\n    }\n    return React.cloneElement(this.props.children, {\n      location: this.props.location,\n      organization: this.props.organization\n    });\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: OwnProps) => ({\n  currentUser: getCurrentUser(state),\n  organization: getOrganizationByKey(state, ownProps.params.organizationKey)\n});\n\nconst OrganizationAccessContainer = connect<StateToProps, {}, OwnProps>(mapStateToProps)(\n  OrganizationAccess\n);\n\nexport function hasAdminAccess({\n  currentUser,\n  organization\n}: Pick<StateToProps, 'currentUser' | 'organization'>) {\n  const isAdmin = isLoggedIn(currentUser) && organization && organization.canAdmin;\n  return Boolean(isAdmin);\n}\n\nexport function OrganizationAdminAccess(props: OwnProps) {\n  return <OrganizationAccessContainer hasAccess={hasAdminAccess} {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport getStore from './getStore';\nimport getHistory from './getHistory';\nimport { requireAuthorization } from '../../store/appState/duck';\n\nexport default () => {\n  const store = getStore();\n  const history = getHistory();\n\n  const returnTo = window.location.pathname + window.location.search + window.location.hash;\n\n  store.dispatch(requireAuthorization());\n  history.replace({\n    pathname: '/sessions/new',\n    query: { return_to: returnTo }\n  });\n};\n"],"sourceRoot":""}