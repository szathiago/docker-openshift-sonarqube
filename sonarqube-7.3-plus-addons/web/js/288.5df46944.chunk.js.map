{"version":3,"sources":["webpack:///./src/main/js/apps/sessions/components/EmailAlreadyExists.tsx"],"names":["EmailAlreadyExists","_super","_this","apply","this","arguments","mounted","state","identityProviders","loading","fetchIdentityProviders","setState","Object","_api_users__WEBPACK_IMPORTED_MODULE_2__","then","_a","renderIdentityProvier","provider","login","identityProvider","find","p","key","react__WEBPACK_IMPORTED_MODULE_0__","className","style","backgroundColor","color","_helpers_colors__WEBPACK_IMPORTED_MODULE_4__","_app_theme__WEBPACK_IMPORTED_MODULE_3__","alt","name","src","_helpers_urls__WEBPACK_IMPORTED_MODULE_6__","iconPath","width","height","__extends","prototype","componentDidMount","componentWillUnmount","render","query","props","location","id","react_intl__WEBPACK_IMPORTED_MODULE_1__","defaultMessage","_helpers_l10n__WEBPACK_IMPORTED_MODULE_5__","values","email","existingProvider","existingLogin","href"],"mappings":"6bA6CAA,EAAA,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA,OAAAD,KAAAE,MAAAC,KAAAC,YAAAD,YACEF,EAAAI,SAAU,EACVJ,EAAAK,OAAiBC,qBAAuBC,SAAS,GAWjDP,EAAAQ,uBAAyB,WACvBR,EAAKS,UAAWF,SAAS,IACzBG,OAAAC,EAAA,EAAAD,GAAuBE,KACrB,SAACC,OAAEP,EAAAO,EAAAP,kBACGN,EAAKI,SACPJ,EAAKS,UAAWH,kBAAiBA,EAAEC,SAAS,KAGhD,WACMP,EAAKI,SACPJ,EAAKS,UAAWF,SAAS,OAMjCP,EAAAc,sBAAwB,SAACC,EAAkBC,GACzC,IAAMC,EAAmBjB,EAAKK,MAAMC,kBAAkBY,KAAK,SAAAC,GAAK,OAAAA,EAAEC,MAAFL,IAEhE,OAAOE,EACLI,EAAA,qBACEC,UAAU,oBACVC,OACEC,gBAAiBP,EAAiBO,gBAClCC,MAAOf,OAAAgB,EAAA,EAAAhB,CAAaO,EAAiBO,gBAAiBG,EAAA,mBAExDN,EAAA,qBACEO,IAAKX,EAAiBY,KACtBP,UAAU,sBACVQ,IAAKpB,OAAAqB,EAAA,EAAArB,GAAeO,EAAiBe,SACrCC,MAAM,KACNC,OAAO,OAERlB,GAGHK,EAAA,yBACgB,cAAbN,GAA4BA,MAAWC,MAkDhD,OApGgDmB,EAAArC,EAAAC,GAI9CD,EAAAsC,UAAAC,kBAAA,WACEnC,KAAKE,SAAU,EACfF,KAAKM,0BAGPV,EAAAsC,UAAAE,qBAAA,WACEpC,KAAKE,SAAU,GA6CjBN,EAAAsC,UAAAG,OAAA,WACU,IAAAC,EAAAtC,KAAAuC,MAAAC,SAAAF,MAER,OACEnB,EAAA,qBAAKsB,GAAG,KAAKrB,UAAU,uBACrBD,EAAA,qBAAKsB,GAAG,QAAQrB,UAAU,eACxBD,EAAA,qBAAKC,UAAU,yCACbD,EAAA,mBAAGC,UAAU,wBACXD,EAAA,cAACuB,EAAA,kBACCC,eAAgBnC,OAAAoC,EAAA,EAAApC,CAAU,mCAC1BiC,GAAG,kCACHI,QAAUC,MAAO3B,EAAA,4BAASmB,EAAMQ,WAGnC9C,KAAKY,sBAAsB0B,EAAMS,iBAAkBT,EAAMU,gBAG5D7B,EAAA,qBAAKC,UAAU,oCACbD,EAAA,mBAAGC,UAAU,wBAAwBZ,OAAAoC,EAAA,EAAApC,CAAU,oCAC9CR,KAAKY,sBAAsB0B,EAAMzB,SAAUyB,EAAMxB,QAGpDK,EAAA,qBAAKC,UAAU,uBACZZ,OAAAoC,EAAA,EAAApC,CAAU,mCACXW,EAAA,oBAAIC,UAAU,eACZD,EAAA,oBAAIC,UAAU,cAAcZ,OAAAoC,EAAA,EAAApC,CAAU,oCACtCW,EAAA,oBAAIC,UAAU,cAAcZ,OAAAoC,EAAA,EAAApC,CAAU,oCACtCW,EAAA,oBAAIC,UAAU,cAAcZ,OAAAoC,EAAA,EAAApC,CAAU,sCAI1CW,EAAA,qBAAKC,UAAU,6BACbD,EAAA,mBACEC,UAAU,qBACV6B,KAASzC,OAAAqB,EAAA,EAAArB,GAAY,kBAAkB8B,EAAMzB,SAAQ,yBACpDL,OAAAoC,EAAA,EAAApC,CAAU,aAEbW,EAAA,mBAAGC,UAAU,4BAA4B6B,KAAMzC,OAAAqB,EAAA,EAAArB,GAAe,KAC3DA,OAAAoC,EAAA,EAAApC,CAAU,eAOzBZ,EApGA,CAAgDuB,EAAA","file":"js/288.5df46944.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { getIdentityProviders } from '../../../api/users';\nimport * as theme from '../../../app/theme';\nimport { IdentityProvider } from '../../../app/types';\nimport { getTextColor } from '../../../helpers/colors';\nimport { translate } from '../../../helpers/l10n';\nimport { getBaseUrl } from '../../../helpers/urls';\n\ninterface Props {\n  location: {\n    query: {\n      email: string;\n      login: string;\n      provider: string;\n      existingLogin: string;\n      existingProvider: string;\n    };\n  };\n}\n\ninterface State {\n  identityProviders: IdentityProvider[];\n  loading: boolean;\n}\n\nexport default class EmailAlreadyExists extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { identityProviders: [], loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchIdentityProviders();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchIdentityProviders = () => {\n    this.setState({ loading: true });\n    getIdentityProviders().then(\n      ({ identityProviders }) => {\n        if (this.mounted) {\n          this.setState({ identityProviders, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  renderIdentityProvier = (provider: string, login: string) => {\n    const identityProvider = this.state.identityProviders.find(p => p.key === provider);\n\n    return identityProvider ? (\n      <div\n        className=\"identity-provider\"\n        style={{\n          backgroundColor: identityProvider.backgroundColor,\n          color: getTextColor(identityProvider.backgroundColor, theme.secondFontColor)\n        }}>\n        <img\n          alt={identityProvider.name}\n          className=\"little-spacer-right\"\n          src={getBaseUrl() + identityProvider.iconPath}\n          width=\"14\"\n          height=\"14\"\n        />\n        {login}\n      </div>\n    ) : (\n      <div>\n        {provider !== 'sonarqube' && provider} {login}\n      </div>\n    );\n  };\n\n  render() {\n    const { query } = this.props.location;\n\n    return (\n      <div id=\"bd\" className=\"page-wrapper-simple\">\n        <div id=\"nonav\" className=\"page-simple\">\n          <div className=\"big-spacer-bottom js-existing-account\">\n            <p className=\"little-spacer-bottom\">\n              <FormattedMessage\n                defaultMessage={translate('sessions.email_already_exists.1')}\n                id=\"sessions.email_already_exists.1\"\n                values={{ email: <strong>{query.email}</strong> }}\n              />\n            </p>\n            {this.renderIdentityProvier(query.existingProvider, query.existingLogin)}\n          </div>\n\n          <div className=\"big-spacer-bottom js-new-account\">\n            <p className=\"little-spacer-bottom\">{translate('sessions.email_already_exists.2')}</p>\n            {this.renderIdentityProvier(query.provider, query.login)}\n          </div>\n\n          <div className=\"alert alert-warning\">\n            {translate('sessions.email_already_exists.3')}\n            <ul className=\"list-styled\">\n              <li className=\"spacer-top\">{translate('sessions.email_already_exists.4')}</li>\n              <li className=\"spacer-top\">{translate('sessions.email_already_exists.5')}</li>\n              <li className=\"spacer-top\">{translate('sessions.email_already_exists.6')}</li>\n            </ul>\n          </div>\n\n          <div className=\"big-spacer-top text-right\">\n            <a\n              className=\"button js-continue\"\n              href={`${getBaseUrl()}/sessions/init/${query.provider}?allowEmailShift=true`}>\n              {translate('continue')}\n            </a>\n            <a className=\"big-spacer-left js-cancel\" href={getBaseUrl() + '/'}>\n              {translate('cancel')}\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}