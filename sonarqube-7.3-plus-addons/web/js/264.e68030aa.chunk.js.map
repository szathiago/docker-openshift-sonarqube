{"version":3,"sources":["webpack:///./src/main/js/apps/permissions/global/components/PageHeader.js","webpack:///./src/main/js/apps/permissions/global/components/AllHoldersList.tsx","webpack:///./src/main/js/apps/permissions/global/store/actions.js","webpack:///./src/main/js/apps/permissions/global/components/AllHoldersListContainer.tsx","webpack:///./src/main/js/apps/permissions/global/components/App.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/apps/organizations/forSingleOrganization.tsx","webpack:///./src/main/js/apps/permissions/shared/components/PageError.tsx"],"names":["PageHeader_PageHeader","_super","PageHeader","__extends","prototype","render","title","this","props","organization","Object","l10n","description","index_js_exposed_default","a","createElement","className","loading","defaultProps","PureComponent","components_PageHeader","es","state","rootReducer","PERMISSIONS_ORDER","AllHoldersList","_this","apply","arguments","handleToggleUser","user","permission","permissions","includes","revokePermissionFromUser","login","grantPermissionToUser","handleToggleGroup","group","revokePermissionFromGroup","name","grantPermissionToGroup","AllHoldersList_extends","componentDidMount","loadHolders","l10nPrefix","map","p","key","index_js_exposed","HoldersList","groups","onSelectPermission","onToggleGroup","onToggleUser","selectedPermission","users","SearchForm","filter","onFilter","onSearch","query","actions_loadHolders","dispatch","getState","type","actions","requests","push","api_permissions","Promise","resolve","all","then","responses","catch","e","request","message","AllHoldersListContainer","ownProps","organizationKey","undefined","groupName","actions_grantToGroup","actions_grantToUser","actions_updateFilter","actions_updateQuery","actions_selectPermission","actions_revokeFromGroup","actions_revokeFromUser","components_AllHoldersList","__webpack_exports__","forSingleOrganization","_a","Suggestions","suggestions","Helmet_default","PageError","context","addSuggestions","componentDidUpdate","prevProps","removeSuggestions","componentWillUnmount","contextTypes","prop_types__WEBPACK_IMPORTED_MODULE_1__","isRequired","react__WEBPACK_IMPORTED_MODULE_0__","ComposedComponent","ForSingleOrganization","customOrganizations","router","other","__rest","params","replace","__assign","displayName","react_redux__WEBPACK_IMPORTED_MODULE_1__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_3__","react_router__WEBPACK_IMPORTED_MODULE_2__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"6bAwBAA,EAAA,SAAAC,GAAA,SAAAC,mDA8BA,OA9ByBC,EAAAD,EAAAD,GAWvBC,EAAAE,UAAAC,OAAA,WACE,IAAMC,EAAQC,KAAKC,MAAMC,aACrBC,OAAAC,EAAA,EAAAD,CAAU,oBACVA,OAAAC,EAAA,EAAAD,CAAU,2BAERE,EAAcL,KAAKC,MAAMC,aAC3BC,OAAAC,EAAA,EAAAD,CAAU,6CACVA,OAAAC,EAAA,EAAAD,CAAU,uCAEd,OACEG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcV,GAE3BC,KAAKC,MAAMS,SAAWJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAEpCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBJ,KAnBlCV,EAAAgB,cACLD,SAAS,GAsBbf,EA9BA,CAAyBW,EAAAC,EAAMK,eAoC/BC,EAAeV,OAAAW,EAAA,QAAAX,CAJS,SAAAY,GAAS,OAC/BL,QAASP,OAAAa,EAAA,wBAAAb,CAAwBY,KAGnC,CAAwCtB,kUClClCwB,GAAqB,QAAS,eAAgB,YAAa,OAAQ,kBAmBzE,SAAAvB,GAAA,SAAAwB,IAAA,IAAAC,EAAA,OAAAzB,KAAA0B,MAAApB,KAAAqB,YAAArB,YAKEmB,EAAAG,iBAAmB,SAACC,EAAsBC,GAGxC,OAFsBD,EAAKE,YAAYC,SAASF,GAGvCL,EAAKlB,MAAM0B,yBAAyBJ,EAAKK,MAAOJ,GAEhDL,EAAKlB,MAAM4B,sBAAsBN,EAAKK,MAAOJ,IAIxDL,EAAAW,kBAAoB,SAACC,EAAwBP,GAG3C,OAFsBO,EAAMN,YAAYC,SAASF,GAGxCL,EAAKlB,MAAM+B,0BAA0BD,EAAME,KAAMT,GAEjDL,EAAKlB,MAAMiC,uBAAuBH,EAAME,KAAMT,MA8B3D,OAnD4CW,EAAAjB,EAAAxB,GAC1CwB,EAAArB,UAAAuC,kBAAA,WACEpC,KAAKC,MAAMoC,eAuBbnB,EAAArB,UAAAC,OAAA,WACE,IAAMwC,EAAatC,KAAKC,MAAMC,aAAe,4BAA8B,qBACrEuB,EAAcR,EAAkBsB,IAAI,SAAAC,GAAK,OAC7CC,IAAKD,EACLP,KAAM9B,OAAAC,EAAA,EAAAD,CAAUmC,EAAYE,GAC5BnC,YAAaF,OAAAC,EAAA,EAAAD,CAAUmC,EAAYE,EAAG,WAGxC,OACEE,EAAA,cAACC,EAAA,GACCC,OAAQ5C,KAAKC,MAAM2C,OACnBC,mBAAoB7C,KAAKC,MAAM4C,mBAC/BC,cAAe9C,KAAK8B,kBACpBiB,aAAc/C,KAAKsB,iBACnBG,YAAaA,EACbuB,mBAAoBhD,KAAKC,MAAM+C,mBAC/BC,MAAOjD,KAAKC,MAAMgD,OAClBP,EAAA,cAACQ,EAAA,GACCC,OAAQnD,KAAKC,MAAMkD,OACnBC,SAAUpD,KAAKC,MAAMmD,SACrBC,SAAUrD,KAAKC,MAAMoD,SACrBC,MAAOtD,KAAKC,MAAMqD,UAK5BpC,EAnDA,CAA4CwB,EAAA,yCCE/Ba,EAAc,SAACrD,GAAgC,gBAC1DsD,EACAC,GAEA,IAAMH,EAAQnD,OAAAa,EAAA,uBAAAb,CAAuBsD,KAC/BN,EAAShD,OAAAa,EAAA,wBAAAb,CAAwBsD,KACjCT,EAAqB7C,OAAAa,EAAA,oCAAAb,CAAoCsD,KAE/DD,GAAWE,KAAMC,EAAA,EAAiBL,MAAKA,IAEvC,IAAMM,KAcN,MAZe,WAAXT,EACFS,EAASC,KAAKC,EAAA,EAA8BR,EAAON,EAAoB9C,IAEvE0D,EAASC,KAAKE,QAAQC,aAGT,UAAXb,EACFS,EAASC,KAAKC,EAAA,EAA+BR,EAAON,EAAoB9C,IAExE0D,EAASC,KAAKE,QAAQC,aAGjBD,QAAQE,IAAIL,GAChBM,KAAK,SAAAC,GACJ,OAAAX,GACEE,KAAMC,EAAA,EACNV,MAAOkB,EAAU,GACjBvB,OAAQuB,EAAU,GAClBb,MAAKA,MAGRc,MAAM,SAAAC,GACL,OAAOlE,OAAAmE,EAAA,WAAAnE,CAAWkE,GAAGH,KAAK,SAAAK,GAAW,OAAAf,EAASrD,OAAAwD,EAAA,EAAAxD,CAAToE,UCU3CC,EAAerE,OAAAW,EAAA,QAAAX,CA3BS,SAACY,GAAe,OACtCoC,OAAQhD,OAAAa,EAAA,wBAAAb,CAAwBY,GAChC6B,OAAQzC,OAAAa,EAAA,wBAAAb,CAAwBY,GAChCuC,MAAOnD,OAAAa,EAAA,uBAAAb,CAAuBY,GAC9BiC,mBAAoB7C,OAAAa,EAAA,oCAAAb,CAAoCY,GACxDkC,MAAO9C,OAAAa,EAAA,uBAAAb,CAAuBY,KAGL,SAACyC,EAAoBiB,GAC9C,IAAMC,EAAkBD,EAASvE,aAAeuE,EAASvE,aAAauC,SAAMkC,EAC5E,OACEzC,uBAAwB,SAAC0C,EAAmBpD,GAC1C,OAAAgC,EDkEsB,SAC1BoB,EACApD,EACAtB,GACG,gBAACsD,GACJ,OAAOM,EAAA,EACmB,KAAMc,EAAWpD,EAAYtB,GACpDgE,KAAK,WACJV,GACEE,KAAMC,EAAA,EACNiB,UAASA,EACTpD,WAAUA,MAGb4C,MAAM,SAAAC,GACL,OAAOlE,OAAAmE,EAAA,WAAAnE,CAAWkE,GAAGH,KAAK,SAAAK,GAAW,OAAAf,EAASrD,OAAAwD,EAAA,EAAAxD,CAAToE,SCjF5BM,CAAaD,EAAWpD,EAAYkD,KAC/C7C,sBAAuB,SAACD,EAAeJ,GACrC,OAAAgC,EDkCqB,SACzB5B,EACAJ,EACAtB,GACG,gBAACsD,GACJ,OAAOM,EAAA,EACkB,KAAMlC,EAAOJ,EAAYtB,GAC/CgE,KAAK,WACJV,GAAWE,KAAMC,EAAA,EAA0B/B,MAAKA,EAAEJ,WAAUA,MAE7D4C,MAAM,SAAAC,GACL,OAAOlE,OAAAmE,EAAA,WAAAnE,CAAWkE,GAAGH,KAAK,SAAAK,GAAW,OAAAf,EAASrD,OAAAwD,EAAA,EAAAxD,CAAToE,SC7C5BO,CAAYlD,EAAOJ,EAAYkD,KAC1CrC,YAAa,WAAM,OAAAmB,EAASD,EAATmB,KACnBtB,SAAU,SAACD,GAAmB,OAAAK,EDYN,SAACL,EAAsBjD,GAAgC,gBACjFsD,GAEAA,GAAWE,KAAMC,EAAA,EAAeR,OAAMA,IACtCK,EAASD,EAAYrD,KChBoB6E,CAAa5B,EAAtBuB,KAC9BrB,SAAU,SAACC,GAAkB,OAAAE,EDIN,SAACF,EAA0BpD,GAAgC,YAA1D,IAAAoD,MAAmB,IAAuC,SACpFE,GAEAA,GAAWE,KAAMC,EAAA,EAAcL,MAAKA,IACpCE,EAASD,EAAYrD,KCRmB8E,CAAY1B,EAArBoB,KAC7B7B,mBAAoB,SAACrB,GACnB,OAAAgC,EDgB0B,SAAChC,EAA0BtB,GAAgC,gBACzFsD,EACAC,GAIED,EAFyBrD,OAAAa,EAAA,oCAAAb,CAAoCsD,OACpCjC,GACdkC,KAAMC,EAAA,EAAmBnC,WAAUA,IAEnCkC,KAAMC,EAAA,EAAmBnC,WAAY,OAElDgC,EAASD,EAAYrD,KC1BR+E,CAAiBzD,EAAYkD,KACxC1C,0BAA2B,SAAC4C,EAAmBpD,GAC7C,OAAAgC,ED4EyB,SAC7BoB,EACApD,EACAtB,GACG,gBAACsD,GACJ,OAAOM,EAAA,EACsB,KAAMc,EAAWpD,EAAYtB,GACvDgE,KAAK,WACJV,GACEE,KAAMC,EAAA,EACNiB,UAASA,EACTpD,WAAUA,MAGb4C,MAAM,SAAAC,GACL,OAAOlE,OAAAmE,EAAA,WAAAnE,CAAWkE,GAAGH,KAAK,SAAAK,GAAW,OAAAf,EAASrD,OAAAwD,EAAA,EAAAxD,CAAToE,SC3F5BW,CAAgBN,EAAWpD,EAAYkD,KAClD/C,yBAA0B,SAACC,EAAeJ,GACxC,OAAAgC,EDwCwB,SAC5B5B,EACAJ,EACAtB,GACG,gBAACsD,GACJ,OAAOM,EAAA,EACqB,KAAMlC,EAAOJ,EAAYtB,GAClDgE,KAAK,WACJV,GAAWE,KAAMC,EAAA,EAA2B/B,MAAKA,EAAEJ,WAAUA,MAE9D4C,MAAM,SAAAC,GACL,OAAOlE,OAAAmE,EAAA,WAAAnE,CAAWkE,GAAGH,KAAK,SAAAK,GAAW,OAAAf,EAASrD,OAAAwD,EAAA,EAAAxD,CAAToE,SCnD5BY,CAAevD,EAAOJ,EAAYkD,OAIjD,CAGEU,qCChDFC,EAAA,QAAelF,OAAAmF,EAAA,EAAf,CAZA,SAAaC,OAAErF,EAAAqF,EAAArF,aACb,OACEwC,EAAA,qBAAKjC,UAAU,qBACbiC,EAAA,cAAC8C,EAAA,GAAYC,YAAY,uBACzB/C,EAAA,cAACgD,EAAAnF,GAAOR,MAAOI,OAAAC,EAAA,EAAAD,CAAU,mCACzBuC,EAAA,cAAC7B,GAAWX,aAAcA,IAC1BwC,EAAA,cAACiD,EAAA,EAAS,MACVjD,EAAA,cAAC8B,GAAwBtE,aAAcA,uVCd7CsF,EAAA,SAAA9F,GAAA,SAAA8F,mDAyBA,OAzByC5F,EAAA4F,EAAA9F,GAOvC8F,EAAA3F,UAAAuC,kBAAA,WACEpC,KAAK4F,QAAQH,YAAYI,eAAe7F,KAAKC,MAAMwF,cAGrDD,EAAA3F,UAAAiG,mBAAA,SAAmBC,GACbA,EAAUN,cAAgBzF,KAAKC,MAAMwF,cACvCzF,KAAK4F,QAAQH,YAAYO,kBAAkBhG,KAAKC,MAAMwF,aACtDzF,KAAK4F,QAAQH,YAAYI,eAAeE,EAAUN,eAItDD,EAAA3F,UAAAoG,qBAAA,WACEjG,KAAK4F,QAAQH,YAAYO,kBAAkBhG,KAAKC,MAAMwF,cAGxDD,EAAA3F,UAAAC,OAAA,WACE,OAAO,MApBF0F,EAAAU,cACLT,YAAaU,EAAA,OAAiBC,YAqBlCZ,EAzBA,CAAyCa,EAAA,k1BCD3B,SAAAf,EAAmCgB,GAK/C,IAAAC,EAAA,SAAA7G,GAAA,SAAA6G,mDAaA,OAboC3G,EAAA2G,EAAA7G,GAGlC6G,EAAA1G,UAAAC,OAAA,WACE,IAAMyF,EAAAvF,KAAAC,MAAEuG,EAAAjB,EAAAiB,oBAAqBC,EAAAlB,EAAAkB,OAAQC,EAAAC,EAAApB,GAAA,iCAErC,OAAKmB,EAAME,OAAOlC,iBAAmB8B,GACnCC,EAAOI,QAAQ,cACR,MAGFR,EAAA,cAACC,EAAiBQ,KAAKJ,KAVzBH,EAAAQ,YAAc,yBAAyBT,EAAkBS,YAAW,KAY7ER,EAbA,CAAoCF,EAAA,WAmBpC,OAAOlG,OAAA6G,EAAA,QAAA7G,CAJiB,SAACY,GAAe,OACtCyF,oBAAqBrG,OAAA8G,EAAA,4BAAA9G,CAA4BY,KAG5CZ,CAAyBA,OAAA+G,EAAA,WAAA/G,CAAWoG,sECX7ClB,EAAA,EAAelF,OAAA6G,EAAA,QAAA7G,CAJS,SAACY,GAAe,OACtCwD,QAASpE,OAAAgH,EAAA,uBAAAhH,CAAuBY,KAGlC,CAZA,SAAmBwE,OAAEhB,EAAAgB,EAAAhB,QACnB,OAAKA,EAIE8B,EAAA,qBAAK5F,UAAU,sBAAsB8D,GAHnC","file":"js/264.e68030aa.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { translate } from '../../../../helpers/l10n';\nimport { isPermissionsAppLoading } from '../../../../store/rootReducer';\n\nclass PageHeader extends React.PureComponent {\n  /*:: props: {\n    loading?: boolean,\n    organization?: {}\n  };\n*/\n\n  static defaultProps = {\n    loading: false\n  };\n\n  render() {\n    const title = this.props.organization\n      ? translate('permissions.page')\n      : translate('global_permissions.page');\n\n    const description = this.props.organization\n      ? translate('organization_permissions.page.description')\n      : translate('global_permissions.page.description');\n\n    return (\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{title}</h1>\n\n        {this.props.loading && <i className=\"spinner\" />}\n\n        <div className=\"page-description\">{description}</div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loading: isPermissionsAppLoading(state)\n});\n\nexport default connect(mapStateToProps)(PageHeader);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SearchForm from '../../shared/components/SearchForm';\nimport HoldersList from '../../shared/components/HoldersList';\nimport { translate } from '../../../../helpers/l10n';\nimport { Organization } from '../../../../app/types';\nimport { PermissionUser, PermissionGroup } from '../../../../api/permissions';\n\nconst PERMISSIONS_ORDER = ['admin', 'profileadmin', 'gateadmin', 'scan', 'provisioning'];\n\ninterface Props {\n  filter: string;\n  grantPermissionToGroup: (groupName: string, permission: string) => Promise<void>;\n  grantPermissionToUser: (login: string, permission: string) => Promise<void>;\n  groups: PermissionGroup[];\n  loadHolders: () => void;\n  onFilter: (filter: string) => void;\n  onSearch: (query: string) => void;\n  onSelectPermission: (permission: string) => void;\n  organization?: Organization;\n  query: string;\n  revokePermissionFromGroup: (groupName: string, permission: string) => Promise<void>;\n  revokePermissionFromUser: (login: string, permission: string) => Promise<void>;\n  selectedPermission?: string;\n  users: PermissionUser[];\n}\n\nexport default class AllHoldersList extends React.PureComponent<Props> {\n  componentDidMount() {\n    this.props.loadHolders();\n  }\n\n  handleToggleUser = (user: PermissionUser, permission: string) => {\n    const hasPermission = user.permissions.includes(permission);\n\n    if (hasPermission) {\n      return this.props.revokePermissionFromUser(user.login, permission);\n    } else {\n      return this.props.grantPermissionToUser(user.login, permission);\n    }\n  };\n\n  handleToggleGroup = (group: PermissionGroup, permission: string) => {\n    const hasPermission = group.permissions.includes(permission);\n\n    if (hasPermission) {\n      return this.props.revokePermissionFromGroup(group.name, permission);\n    } else {\n      return this.props.grantPermissionToGroup(group.name, permission);\n    }\n  };\n\n  render() {\n    const l10nPrefix = this.props.organization ? 'organizations_permissions' : 'global_permissions';\n    const permissions = PERMISSIONS_ORDER.map(p => ({\n      key: p,\n      name: translate(l10nPrefix, p),\n      description: translate(l10nPrefix, p, 'desc')\n    }));\n\n    return (\n      <HoldersList\n        groups={this.props.groups}\n        onSelectPermission={this.props.onSelectPermission}\n        onToggleGroup={this.handleToggleGroup}\n        onToggleUser={this.handleToggleUser}\n        permissions={permissions}\n        selectedPermission={this.props.selectedPermission}\n        users={this.props.users}>\n        <SearchForm\n          filter={this.props.filter}\n          onFilter={this.props.onFilter}\n          onSearch={this.props.onSearch}\n          query={this.props.query}\n        />\n      </HoldersList>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport * as api from '../../../../api/permissions';\nimport { parseError } from '../../../../helpers/request';\nimport {\n  raiseError,\n  REQUEST_HOLDERS,\n  RECEIVE_HOLDERS_SUCCESS,\n  UPDATE_QUERY,\n  UPDATE_FILTER,\n  SELECT_PERMISSION,\n  GRANT_PERMISSION_TO_USER,\n  REVOKE_PERMISSION_TO_USER,\n  GRANT_PERMISSION_TO_GROUP,\n  REVOKE_PERMISSION_FROM_GROUP\n} from '../../shared/store/actions';\nimport {\n  getPermissionsAppQuery,\n  getPermissionsAppFilter,\n  getPermissionsAppSelectedPermission\n} from '../../../../store/rootReducer';\n\n/*::\ntype Dispatch = Object => void;\n*/\n/*::\ntype GetState = () => Object;\n*/\n\nexport const loadHolders = (organization /*: ?string */) => (\n  dispatch /*: Dispatch */,\n  getState /*: GetState */\n) => {\n  const query = getPermissionsAppQuery(getState());\n  const filter = getPermissionsAppFilter(getState());\n  const selectedPermission = getPermissionsAppSelectedPermission(getState());\n\n  dispatch({ type: REQUEST_HOLDERS, query });\n\n  const requests = [];\n\n  if (filter !== 'groups') {\n    requests.push(api.getGlobalPermissionsUsers(query, selectedPermission, organization));\n  } else {\n    requests.push(Promise.resolve([]));\n  }\n\n  if (filter !== 'users') {\n    requests.push(api.getGlobalPermissionsGroups(query, selectedPermission, organization));\n  } else {\n    requests.push(Promise.resolve([]));\n  }\n\n  return Promise.all(requests)\n    .then(responses =>\n      dispatch({\n        type: RECEIVE_HOLDERS_SUCCESS,\n        users: responses[0],\n        groups: responses[1],\n        query\n      })\n    )\n    .catch(e => {\n      return parseError(e).then(message => dispatch(raiseError(message)));\n    });\n};\n\nexport const updateQuery = (query /*: string */ = '', organization /*: ?string */) => (\n  dispatch /*: Dispatch */\n) => {\n  dispatch({ type: UPDATE_QUERY, query });\n  dispatch(loadHolders(organization));\n};\n\nexport const updateFilter = (filter /*: string */, organization /*: ?string */) => (\n  dispatch /*: Dispatch */\n) => {\n  dispatch({ type: UPDATE_FILTER, filter });\n  dispatch(loadHolders(organization));\n};\n\nexport const selectPermission = (permission /*: string */, organization /*: ?string */) => (\n  dispatch /*: Dispatch */,\n  getState /*: GetState */\n) => {\n  const selectedPermission = getPermissionsAppSelectedPermission(getState());\n  if (selectedPermission !== permission) {\n    dispatch({ type: SELECT_PERMISSION, permission });\n  } else {\n    dispatch({ type: SELECT_PERMISSION, permission: null });\n  }\n  dispatch(loadHolders(organization));\n};\n\nexport const grantToUser = (\n  login /*: string */,\n  permission /*: string */,\n  organization /*: ?string */\n) => (dispatch /*: Dispatch */) => {\n  return api\n    .grantPermissionToUser(null, login, permission, organization)\n    .then(() => {\n      dispatch({ type: GRANT_PERMISSION_TO_USER, login, permission });\n    })\n    .catch(e => {\n      return parseError(e).then(message => dispatch(raiseError(message)));\n    });\n};\n\nexport const revokeFromUser = (\n  login /*: string */,\n  permission /*: string */,\n  organization /*: ?string */\n) => (dispatch /*: Dispatch */) => {\n  return api\n    .revokePermissionFromUser(null, login, permission, organization)\n    .then(() => {\n      dispatch({ type: REVOKE_PERMISSION_TO_USER, login, permission });\n    })\n    .catch(e => {\n      return parseError(e).then(message => dispatch(raiseError(message)));\n    });\n};\n\nexport const grantToGroup = (\n  groupName /*: string */,\n  permission /*: string */,\n  organization /*: ?string */\n) => (dispatch /*: Dispatch */) => {\n  return api\n    .grantPermissionToGroup(null, groupName, permission, organization)\n    .then(() => {\n      dispatch({\n        type: GRANT_PERMISSION_TO_GROUP,\n        groupName,\n        permission\n      });\n    })\n    .catch(e => {\n      return parseError(e).then(message => dispatch(raiseError(message)));\n    });\n};\n\nexport const revokeFromGroup = (\n  groupName /*: string */,\n  permission /*: string */,\n  organization /*: ?string */\n) => (dispatch /*: Dispatch */) => {\n  return api\n    .revokePermissionFromGroup(null, groupName, permission, organization)\n    .then(() => {\n      dispatch({\n        type: REVOKE_PERMISSION_FROM_GROUP,\n        groupName,\n        permission\n      });\n    })\n    .catch(e => {\n      return parseError(e).then(message => dispatch(raiseError(message)));\n    });\n};\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport AllHoldersList from './AllHoldersList';\nimport {\n  loadHolders,\n  grantToUser,\n  revokeFromUser,\n  grantToGroup,\n  revokeFromGroup,\n  updateFilter,\n  updateQuery,\n  selectPermission\n} from '../store/actions';\nimport {\n  getPermissionsAppUsers,\n  getPermissionsAppGroups,\n  getPermissionsAppQuery,\n  getPermissionsAppFilter,\n  getPermissionsAppSelectedPermission\n} from '../../../../store/rootReducer';\nimport { Organization } from '../../../../app/types';\nimport { PermissionUser, PermissionGroup } from '../../../../api/permissions';\n\ninterface OwnProps {\n  organization?: Organization;\n}\n\ninterface StateToProps {\n  filter: string;\n  groups: PermissionGroup[];\n  query: string;\n  selectedPermission?: string;\n  users: PermissionUser[];\n}\n\ninterface DispatchToProps {\n  grantPermissionToGroup: (groupName: string, permission: string) => Promise<void>;\n  grantPermissionToUser: (login: string, permission: string) => Promise<void>;\n  loadHolders: () => void;\n  onFilter: (filter: string) => void;\n  onSearch: (query: string) => void;\n  onSelectPermission: (permission: string) => void;\n  revokePermissionFromGroup: (groupName: string, permission: string) => Promise<void>;\n  revokePermissionFromUser: (login: string, permission: string) => Promise<void>;\n}\n\nconst mapStateToProps = (state: any) => ({\n  filter: getPermissionsAppFilter(state),\n  groups: getPermissionsAppGroups(state),\n  query: getPermissionsAppQuery(state),\n  selectedPermission: getPermissionsAppSelectedPermission(state),\n  users: getPermissionsAppUsers(state)\n});\n\nconst mapDispatchToProps = (dispatch: Function, ownProps: OwnProps) => {\n  const organizationKey = ownProps.organization ? ownProps.organization.key : undefined;\n  return {\n    grantPermissionToGroup: (groupName: string, permission: string) =>\n      dispatch(grantToGroup(groupName, permission, organizationKey)),\n    grantPermissionToUser: (login: string, permission: string) =>\n      dispatch(grantToUser(login, permission, organizationKey)),\n    loadHolders: () => dispatch(loadHolders(organizationKey)),\n    onFilter: (filter: string) => dispatch(updateFilter(filter, organizationKey)),\n    onSearch: (query: string) => dispatch(updateQuery(query, organizationKey)),\n    onSelectPermission: (permission: string) =>\n      dispatch(selectPermission(permission, organizationKey)),\n    revokePermissionFromGroup: (groupName: string, permission: string) =>\n      dispatch(revokeFromGroup(groupName, permission, organizationKey)),\n    revokePermissionFromUser: (login: string, permission: string) =>\n      dispatch(revokeFromUser(login, permission, organizationKey))\n  };\n};\n\nexport default connect<StateToProps, DispatchToProps, OwnProps>(\n  mapStateToProps,\n  mapDispatchToProps\n)(AllHoldersList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport PageHeader from './PageHeader';\nimport AllHoldersListContainer from './AllHoldersListContainer';\nimport PageError from '../../shared/components/PageError';\nimport Suggestions from '../../../../app/components/embed-docs-modal/Suggestions';\nimport { translate } from '../../../../helpers/l10n';\nimport { Organization } from '../../../../app/types';\nimport forSingleOrganization from '../../../organizations/forSingleOrganization';\nimport '../../styles.css';\n\ninterface Props {\n  organization?: Organization;\n}\n\nfunction App({ organization }: Props) {\n  return (\n    <div className=\"page page-limited\">\n      <Suggestions suggestions=\"global_permissions\" />\n      <Helmet title={translate('global_permissions.permission')} />\n      <PageHeader organization={organization} />\n      <PageError />\n      <AllHoldersListContainer organization={organization} />\n    </div>\n  );\n}\n\nexport default forSingleOrganization(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default class Suggestions extends React.PureComponent<Props> {\n  context!: { suggestions: SuggestionsContext };\n\n  static contextTypes = {\n    suggestions: PropTypes.object.isRequired\n  };\n\n  componentDidMount() {\n    this.context.suggestions.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.context.suggestions.removeSuggestions(this.props.suggestions);\n      this.context.suggestions.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.context.suggestions.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { areThereCustomOrganizations } from '../../store/rootReducer';\n\ntype ReactComponent<P> = React.ComponentClass<P> | React.StatelessComponent<P>;\n\nexport default function forSingleOrganization<P>(ComposedComponent: ReactComponent<P>) {\n  interface StateProps {\n    customOrganizations: boolean | undefined;\n  }\n\n  class ForSingleOrganization extends React.Component<StateProps & WithRouterProps> {\n    static displayName = `forSingleOrganization(${ComposedComponent.displayName})}`;\n\n    render() {\n      const { customOrganizations, router, ...other } = this.props;\n\n      if (!other.params.organizationKey && customOrganizations) {\n        router.replace('/not_found');\n        return null;\n      }\n\n      return <ComposedComponent {...other} />;\n    }\n  }\n\n  const mapStateToProps = (state: any) => ({\n    customOrganizations: areThereCustomOrganizations(state)\n  });\n\n  return connect(mapStateToProps)(withRouter(ForSingleOrganization));\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getPermissionsAppError } from '../../../../store/rootReducer';\n\ninterface Props {\n  message: string;\n}\n\nfunction PageError({ message }: Props) {\n  if (!message) {\n    return null;\n  }\n\n  return <div className=\"alert alert-danger\">{message}</div>;\n}\n\nconst mapStateToProps = (state: any) => ({\n  message: getPermissionsAppError(state)\n});\n\nexport default connect(mapStateToProps)(PageError);\n"],"sourceRoot":""}