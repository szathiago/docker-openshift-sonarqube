{"version":3,"sources":["webpack:///./src/main/js/app/components/extensions/ProjectPageExtension.tsx"],"names":["ProjectPageExtension","props","_a","params","extensionKey","pluginKey","component","extension","extensions","find","p","key","react__WEBPACK_IMPORTED_MODULE_0__","_ExtensionContainer__WEBPACK_IMPORTED_MODULE_1__","options","_NotFound__WEBPACK_IMPORTED_MODULE_2__","withContainer"],"mappings":"wKAiCc,SAAAA,EAA+BC,GACrC,IAAAC,EAAAD,EAAAE,OAAEC,EAAAF,EAAAE,aAAcC,EAAAH,EAAAG,UACdC,EAAAL,EAAAK,UACFC,EACJD,EAAUE,YACVF,EAAUE,WAAWC,KAAK,SAAAC,GAAK,OAAAA,EAAEC,MAAWN,EAAS,IAAtBD,IACjC,OAAOG,EACLK,EAAA,cAACC,EAAA,GAAmBN,UAAWA,EAAWO,SAAWR,UAASA,KAE9DM,EAAA,cAACG,EAAA,SAASC,eAAe","file":"js/361.d6e2774e.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ExtensionContainer from './ExtensionContainer';\nimport NotFound from '../NotFound';\nimport { Component } from '../../types';\n\ninterface Props {\n  component: Component;\n  location: { query: { id: string } };\n  params: {\n    extensionKey: string;\n    pluginKey: string;\n  };\n}\n\nexport default function ProjectPageExtension(props: Props) {\n  const { extensionKey, pluginKey } = props.params;\n  const { component } = props;\n  const extension =\n    component.extensions &&\n    component.extensions.find(p => p.key === `${pluginKey}/${extensionKey}`);\n  return extension ? (\n    <ExtensionContainer extension={extension} options={{ component }} />\n  ) : (\n    <NotFound withContainer={false} />\n  );\n}\n"],"sourceRoot":""}