{"version":3,"sources":["webpack:///./src/main/js/app/components/extensions/GlobalPageExtension.js"],"names":["__webpack_exports__","Object","react_redux__WEBPACK_IMPORTED_MODULE_1__","state","globalPages","_store_rootReducer__WEBPACK_IMPORTED_MODULE_4__","props","_a","params","extensionKey","pluginKey","extension","find","p","key","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_ExtensionContainer__WEBPACK_IMPORTED_MODULE_2__","_NotFound__WEBPACK_IMPORTED_MODULE_3__","withContainer"],"mappings":"4JAkDAA,EAAA,QAAeC,OAAAC,EAAA,QAAAD,CAJS,SAAAE,GAAS,OAC/BC,YAAaH,OAAAI,EAAA,YAAAJ,CAAYE,GAAOC,cAGlC,CAdA,SAA6BE,GACrB,IAAAC,EAAAD,EAAAE,OAAEC,EAAAF,EAAAE,aAAcC,EAAAH,EAAAG,UAChBC,EAAYL,EAAMF,YAAYQ,KAAK,SAAAC,GAAK,OAAAA,EAAEC,MAAWJ,EAAS,IAAtBD,IAC9C,OAAOE,EACLI,EAAAC,EAAAC,cAACC,EAAA,GAAmBP,UAAWA,IAE/BI,EAAAC,EAAAC,cAACE,EAAA,SAASC,eAAe","file":"js/365.b48570b2.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ExtensionContainer from './ExtensionContainer';\nimport NotFound from '../NotFound';\nimport { getAppState } from '../../../store/rootReducer';\n\n/*::\ntype Props = {\n  globalPages: Array<{ key: string }>,\n  params: {\n    extensionKey: string,\n    pluginKey: string\n  }\n};\n*/\n\nfunction GlobalPageExtension(props /*: Props */) {\n  const { extensionKey, pluginKey } = props.params;\n  const extension = props.globalPages.find(p => p.key === `${pluginKey}/${extensionKey}`);\n  return extension ? (\n    <ExtensionContainer extension={extension} />\n  ) : (\n    <NotFound withContainer={false} />\n  );\n}\n\nconst mapStateToProps = state => ({\n  globalPages: getAppState(state).globalPages\n});\n\nexport default connect(mapStateToProps)(GlobalPageExtension);\n"],"sourceRoot":""}