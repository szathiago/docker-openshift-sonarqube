{"version":3,"sources":["webpack:///./src/main/js/apps/organizations/components/OrganizationDelete.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./src/main/js/api/user_groups.ts","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/apps/organizations/actions.ts","webpack:///./src/main/js/components/controls/ConfirmButton.tsx"],"names":["OrganizationDelete","_super","_this","apply","this","arguments","mounted","state","fetchOrganizationPlanInfo","Object","_helpers_system__WEBPACK_IMPORTED_MODULE_10__","_api_organizations__WEBPACK_IMPORTED_MODULE_9__","props","organization","key","then","billingInfo","setState","hasPaidPlan","subscription","status","onDelete","deleteOrganization","context","router","replace","__extends","prototype","componentDidMount","componentWillUnmount","render","title","_helpers_l10n__WEBPACK_IMPORTED_MODULE_6__","react__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","className","_components_common_InstanceMessage__WEBPACK_IMPORTED_MODULE_5__","message","_components_controls_ConfirmButton__WEBPACK_IMPORTED_MODULE_4__","confirmButtonText","isDestructive","modalBody","modalHeader","onConfirm","_a","onClick","_components_ui_buttons__WEBPACK_IMPORTED_MODULE_8__","contextTypes","prop_types__WEBPACK_IMPORTED_MODULE_1__","mapDispatchToProps","_actions__WEBPACK_IMPORTED_MODULE_7__","__webpack_exports__","react_redux__WEBPACK_IMPORTED_MODULE_3__","Modal","react_modal__WEBPACK_IMPORTED_MODULE_1__","__assign","classnames__WEBPACK_IMPORTED_MODULE_2__","modal-medium","medium","modal-large","large","isOpen","overlayClassName","SimpleModal","submitting","stopSubmitting","handleCloseClick","event","preventDefault","currentTarget","blur","onClose","handleFormSubmit","submit","handleSubmitClick","result","onSubmit","_Modal__WEBPACK_IMPORTED_MODULE_1__","contentLabel","header","onRequestClose","children","onCloseClick","onFormSubmit","onSubmitClick","ModalButton","modal","handleButtonClick","handleCloseModal","searchUsersGroups","data","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","catch","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","getUsersInGroup","addUserToGroup","removeUserFromGroup","createGroup","r","group","updateGroup","deleteGroup","ConfirmModal","handleSubmit","confirmData","renderModalContent","_b","confirmDisable","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","loading","_ui_buttons__WEBPACK_IMPORTED_MODULE_4__","autoFocus","undefined","disabled","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","fetchOrganization","dispatch","Promise","all","_api_organizations__WEBPACK_IMPORTED_MODULE_0__","navigation","organizationWithPermissions","_store_organizations_duck__WEBPACK_IMPORTED_MODULE_1__","_store_rootActions__WEBPACK_IMPORTED_MODULE_5__","fetchOrganizationGroups","_api_user_groups__WEBPACK_IMPORTED_MODULE_3__","response","groups","createOrganization","_store_globalMessages_duck__WEBPACK_IMPORTED_MODULE_7__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_8__","name","error","reject","onRejected","updateOrganization","changes","fetchMembers","receiveAction","_store_organizationsMembers_actions__WEBPACK_IMPORTED_MODULE_2__","ps","q","users","total","paging","pageIndex","query","fetchOrganizationMembers","fetchMoreOrganizationMembers","getState","p","_store_rootReducer__WEBPACK_IMPORTED_MODULE_6__","addOrganizationMember","member","login","user","removeOrganizationMember","updateOrganizationMemberGroups","add","remove","_store_users_actions__WEBPACK_IMPORTED_MODULE_4__","groupCount","length","promises","map","concat","ConfirmButton","renderConfirmModal","_ConfirmModal__WEBPACK_IMPORTED_MODULE_2__","_ModalButton__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"js/309.155629cd.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport ConfirmButton from '../../../components/controls/ConfirmButton';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\nimport { translate } from '../../../helpers/l10n';\nimport { deleteOrganization } from '../actions';\nimport { Organization } from '../../../app/types';\nimport { Button } from '../../../components/ui/buttons';\nimport { getOrganizationBilling } from '../../../api/organizations';\nimport { isSonarCloud } from '../../../helpers/system';\n\ninterface DispatchToProps {\n  deleteOrganization: (key: string) => Promise<void>;\n}\n\ninterface OwnProps {\n  organization: Pick<Organization, 'key' | 'name'>;\n}\n\ntype Props = OwnProps & DispatchToProps;\n\ninterface State {\n  hasPaidPlan?: boolean;\n}\n\nexport class OrganizationDelete extends React.PureComponent<Props, State> {\n  mounted = false;\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchOrganizationPlanInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchOrganizationPlanInfo = () => {\n    if (isSonarCloud()) {\n      getOrganizationBilling(this.props.organization.key).then(\n        billingInfo => {\n          if (this.mounted) {\n            this.setState({\n              hasPaidPlan: billingInfo.subscription.status !== 'inactive'\n            });\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ hasPaidPlan: false });\n          }\n        }\n      );\n    }\n  };\n\n  onDelete = () => {\n    return this.props.deleteOrganization(this.props.organization.key).then(() => {\n      this.context.router.replace('/');\n    });\n  };\n\n  render() {\n    const { hasPaidPlan } = this.state;\n    const title = translate('organization.delete');\n    return (\n      <>\n        <Helmet title={title} />\n        <div className=\"page page-limited\">\n          <header className=\"page-header\">\n            <h1 className=\"page-title\">{title}</h1>\n            <div className=\"page-description\">\n              <InstanceMessage message={translate('organization.delete.description')} />\n            </div>\n          </header>\n          <ConfirmButton\n            confirmButtonText={translate('delete')}\n            isDestructive={true}\n            modalBody={\n              <div>\n                {hasPaidPlan && (\n                  <div className=\"alert alert-warning modal-alert\">\n                    {translate('organization.delete.sonarcloud.paid_plan_info')}\n                  </div>\n                )}\n                <p>{translate('organization.delete.question')}</p>\n              </div>\n            }\n            modalHeader={translate('organization.delete')}\n            onConfirm={this.onDelete}>\n            {({ onClick }) => (\n              <Button className=\"js-custom-measure-delete button-red\" onClick={onClick}>\n                {translate('delete')}\n              </Button>\n            )}\n          </ConfirmButton>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps: DispatchToProps = { deleteOrganization: deleteOrganization as any };\n\nexport default connect<null, DispatchToProps, OwnProps>(null, mapDispatchToProps)(\n  OrganizationDelete\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\ninterface OwnProps {\n  medium?: boolean;\n  large?: boolean;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & OwnProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', { 'modal-medium': props.medium, 'modal-large': props.large })}\n      isOpen={true}\n      overlayClassName=\"modal-overlay\"\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    return (\n      <Modal contentLabel={this.props.header} onRequestClose={this.props.onClose}>\n        {this.props.children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from '../helpers/request';\nimport { Paging, Group } from '../app/types';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function searchUsersGroups(data: {\n  f?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n}): Promise<{ groups: Group[]; paging: Paging }> {\n  return getJSON('/api/user_groups/search', data).catch(throwGlobalError);\n}\n\nexport interface GroupUser {\n  login: string;\n  name: string;\n  selected: boolean;\n}\n\nexport function getUsersInGroup(data: {\n  id?: number;\n  name?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n  selected?: string;\n}): Promise<{ paging: Paging; users: GroupUser[] }> {\n  return getJSON('/api/user_groups/users', data).catch(throwGlobalError);\n}\n\nexport function addUserToGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/add_user', data).catch(throwGlobalError);\n}\n\nexport function removeUserFromGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/remove_user', data).catch(throwGlobalError);\n}\n\nexport function createGroup(data: {\n  description?: string;\n  organization: string | undefined;\n  name: string;\n}): Promise<Group> {\n  return postJSON('/api/user_groups/create', data).then(r => r.group, throwGlobalError);\n}\n\nexport function updateGroup(data: { description?: string; id: number; name?: string }) {\n  return post('/api/user_groups/update', data).catch(throwGlobalError);\n}\n\nexport function deleteGroup(data: { name: string; organization: string | undefined }) {\n  return post('/api/user_groups/delete', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { translate } from '../../helpers/l10n';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\n\ninterface Props<T> {\n  children: React.ReactNode;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  header: string;\n  isDestructive?: boolean;\n  onClose: () => void;\n  onConfirm: (data?: T) => void | Promise<void>;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const { children, confirmButtonText, confirmDisable, header, isDestructive } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {translate('cancel')}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header } = this.props;\n    return (\n      <SimpleModal header={header} onClose={this.props.onClose} onSubmit={this.handleSubmit}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport * as api from '../../api/organizations';\nimport * as actions from '../../store/organizations/duck';\nimport * as membersActions from '../../store/organizationsMembers/actions';\nimport { searchUsersGroups, addUserToGroup, removeUserFromGroup } from '../../api/user_groups';\nimport { receiveUser } from '../../store/users/actions';\nimport { onFail } from '../../store/rootActions';\nimport { getOrganizationMembersState } from '../../store/rootReducer';\nimport { addGlobalSuccessMessage } from '../../store/globalMessages/duck';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\nimport { Organization, OrganizationMember, OrganizationBase } from '../../app/types';\n\nconst PAGE_SIZE = 50;\n\nconst onRejected = (dispatch: Dispatch<any>) => (error: any) => {\n  onFail(dispatch)(error);\n  return Promise.reject(error);\n};\n\nexport const fetchOrganization = (key: string) => (dispatch: Dispatch<any>) => {\n  return Promise.all([api.getOrganization(key), api.getOrganizationNavigation(key)]).then(\n    ([organization, navigation]) => {\n      if (organization) {\n        const organizationWithPermissions = { ...organization, ...navigation };\n        dispatch(actions.receiveOrganizations([organizationWithPermissions]));\n      }\n    },\n    onFail(dispatch)\n  );\n};\n\nexport const fetchOrganizationGroups = (organization: string) => (dispatch: Dispatch<any>) => {\n  return searchUsersGroups({ organization }).then(response => {\n    dispatch(actions.receiveOrganizationGroups(organization, response.groups));\n  }, onFail(dispatch));\n};\n\nexport const createOrganization = (organization: OrganizationBase) => (dispatch: Dispatch<any>) => {\n  return api.createOrganization(organization).then((organization: Organization) => {\n    dispatch(actions.createOrganization(organization));\n    dispatch(\n      addGlobalSuccessMessage(translateWithParameters('organization.created', organization.name))\n    );\n    return organization;\n  }, onRejected(dispatch));\n};\n\nexport const updateOrganization = (key: string, changes: OrganizationBase) => (\n  dispatch: Dispatch<any>\n) => {\n  return api.updateOrganization(key, changes).then(() => {\n    dispatch(actions.updateOrganization(key, changes));\n    dispatch(addGlobalSuccessMessage(translate('organization.updated')));\n  }, onFail(dispatch));\n};\n\nexport const deleteOrganization = (key: string) => (dispatch: Dispatch<any>) => {\n  return api.deleteOrganization(key).then(() => {\n    dispatch(actions.deleteOrganization(key));\n    dispatch(addGlobalSuccessMessage(translate('organization.deleted')));\n  }, onFail(dispatch));\n};\n\nconst fetchMembers = (\n  data: {\n    organization: string;\n    p?: number;\n    ps?: number;\n    q?: string;\n  },\n  dispatch: Dispatch<any>,\n  receiveAction: Function\n) => {\n  dispatch(membersActions.updateState(data.organization, { loading: true }));\n  if (data.ps === undefined) {\n    data.ps = PAGE_SIZE;\n  }\n  if (!data.q) {\n    data.q = undefined;\n  }\n  return api.searchMembers(data).then(\n    response => {\n      dispatch(\n        receiveAction(data.organization, response.users, {\n          loading: false,\n          total: response.paging.total,\n          pageIndex: response.paging.pageIndex,\n          query: data.q || null\n        })\n      );\n    },\n    (error: any) => {\n      onFail(dispatch)(error);\n      dispatch(membersActions.updateState(data.organization, { loading: false }));\n    }\n  );\n};\n\nexport const fetchOrganizationMembers = (key: string, query?: string) => (\n  dispatch: Dispatch<any>\n) => fetchMembers({ organization: key, q: query }, dispatch, membersActions.receiveMembers);\n\nexport const fetchMoreOrganizationMembers = (key: string, query?: string) => (\n  dispatch: Dispatch<any>,\n  getState: () => any\n) =>\n  fetchMembers(\n    { organization: key, p: getOrganizationMembersState(getState(), key).pageIndex + 1, q: query },\n    dispatch,\n    membersActions.receiveMoreMembers\n  );\n\nexport const addOrganizationMember = (key: string, member: OrganizationMember) => (\n  dispatch: Dispatch<any>\n) => {\n  return api\n    .addMember({ login: member.login, organization: key })\n    .then(user => dispatch(membersActions.addMember(key, user)), onFail(dispatch));\n};\n\nexport const removeOrganizationMember = (key: string, member: OrganizationMember) => (\n  dispatch: Dispatch<any>\n) => {\n  dispatch(membersActions.removeMember(key, member));\n  return api.removeMember({ login: member.login, organization: key }).catch((error: any) => {\n    onFail(dispatch)(error);\n    dispatch(membersActions.addMember(key, member));\n  });\n};\n\nexport const updateOrganizationMemberGroups = (\n  organization: Organization,\n  member: OrganizationMember,\n  add: string[],\n  remove: string[]\n) => (dispatch: Dispatch<any>) => {\n  dispatch(\n    receiveUser({\n      ...member,\n      groupCount: (member.groupCount || 0) + add.length - remove.length\n    })\n  );\n  const promises = [\n    ...add.map(name =>\n      addUserToGroup({ name, login: member.login, organization: organization.key })\n    ),\n    ...remove.map(name =>\n      removeUserFromGroup({ name, login: member.login, organization: organization.key })\n    )\n  ];\n  return Promise.all(promises).catch(error => {\n    dispatch(receiveUser(member));\n    onFail(dispatch)(error);\n  });\n};\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\nimport ConfirmModal from './ConfirmModal';\n\nexport { ChildrenProps } from './ModalButton';\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  confirmButtonText: string;\n  confirmData?: string;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  onConfirm: (data?: string) => void | Promise<void>;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton extends React.PureComponent<Props, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    return (\n      <ConfirmModal\n        confirmButtonText={this.props.confirmButtonText}\n        confirmData={this.props.confirmData}\n        confirmDisable={this.props.confirmDisable}\n        header={this.props.modalHeader}\n        isDestructive={this.props.isDestructive}\n        onClose={onClose}\n        onConfirm={this.props.onConfirm}>\n        {this.props.modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n"],"sourceRoot":""}