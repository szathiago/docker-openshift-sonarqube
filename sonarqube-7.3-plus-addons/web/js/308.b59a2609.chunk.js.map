{"version":3,"sources":["webpack:///./src/main/js/apps/organizations/components/OrganizationEdit.tsx","webpack:///./src/main/js/api/user_groups.ts","webpack:///./src/main/js/apps/organizations/actions.ts"],"names":["OrganizationEdit","_super","props","_this","call","this","mounted","handleAvatarInputChange","event","value","target","setState","avatar","changeAvatarImage","avatarImage","handleSubmit","preventDefault","changes","state","description","name","url","loading","updateOrganization","organization","key","then","stopLoading","lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default","__extends","prototype","componentDidMount","componentWillUnmount","render","title","Object","_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_1__","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","onSubmit","htmlFor","disabled","id","maxLength","onChange","e","required","type","alt","height","src","rows","_components_ui_buttons__WEBPACK_IMPORTED_MODULE_6__","mapDispatchToProps","_actions__WEBPACK_IMPORTED_MODULE_5__","__webpack_exports__","react_redux__WEBPACK_IMPORTED_MODULE_3__","searchUsersGroups","data","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","catch","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","getUsersInGroup","addUserToGroup","removeUserFromGroup","createGroup","r","group","updateGroup","deleteGroup","fetchOrganization","dispatch","Promise","all","_api_organizations__WEBPACK_IMPORTED_MODULE_0__","_a","navigation","organizationWithPermissions","__assign","_store_organizations_duck__WEBPACK_IMPORTED_MODULE_1__","_store_rootActions__WEBPACK_IMPORTED_MODULE_5__","fetchOrganizationGroups","_api_user_groups__WEBPACK_IMPORTED_MODULE_3__","response","groups","createOrganization","_store_globalMessages_duck__WEBPACK_IMPORTED_MODULE_7__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_8__","error","reject","onRejected","deleteOrganization","fetchMembers","receiveAction","_store_organizationsMembers_actions__WEBPACK_IMPORTED_MODULE_2__","undefined","ps","q","users","total","paging","pageIndex","query","fetchOrganizationMembers","fetchMoreOrganizationMembers","getState","p","_store_rootReducer__WEBPACK_IMPORTED_MODULE_6__","addOrganizationMember","member","login","user","removeOrganizationMember","updateOrganizationMemberGroups","add","remove","_store_users_actions__WEBPACK_IMPORTED_MODULE_4__","groupCount","length","promises","map","concat"],"mappings":"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","file":"js/308.b59a2609.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { debounce } from 'lodash';\nimport { translate } from '../../../helpers/l10n';\nimport { updateOrganization } from '../actions';\nimport { SubmitButton } from '../../../components/ui/buttons';\nimport { Organization, OrganizationBase } from '../../../app/types';\n\ninterface DispatchProps {\n  updateOrganization: (organization: string, changes: OrganizationBase) => Promise<any>;\n}\n\ninterface OwnProps {\n  organization: Organization;\n}\n\ntype Props = OwnProps & DispatchProps;\n\ninterface State {\n  loading: boolean;\n  avatar: string;\n  avatarImage: string;\n  description: string;\n  name: string;\n  url: string;\n}\n\nexport class OrganizationEdit extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      loading: false,\n      avatar: props.organization.avatar || '',\n      avatarImage: props.organization.avatar || '',\n      description: props.organization.description || '',\n      name: props.organization.name,\n      url: props.organization.url || ''\n    };\n    this.changeAvatarImage = debounce(this.changeAvatarImage, 500);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleAvatarInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    this.setState({ avatar: value });\n    this.changeAvatarImage(value);\n  };\n\n  changeAvatarImage = (value: string) => {\n    this.setState({ avatarImage: value });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const changes = {\n      avatar: this.state.avatar,\n      description: this.state.description,\n      name: this.state.name,\n      url: this.state.url\n    };\n    this.setState({ loading: true });\n    this.props\n      .updateOrganization(this.props.organization.key, changes)\n      .then(this.stopLoading, this.stopLoading);\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const title = translate('organization.edit');\n    return (\n      <div className=\"page page-limited\">\n        <Helmet title={title} />\n\n        <header className=\"page-header\">\n          <h1 className=\"page-title\">{title}</h1>\n        </header>\n\n        <div className=\"boxed-group boxed-group-inner\">\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"modal-field\">\n              <label htmlFor=\"organization-name\">\n                {translate('organization.name')}\n                <em className=\"mandatory\">*</em>\n              </label>\n              <input\n                disabled={this.state.loading}\n                id=\"organization-name\"\n                maxLength={64}\n                name=\"name\"\n                onChange={e => this.setState({ name: e.target.value })}\n                required={true}\n                type=\"text\"\n                value={this.state.name}\n              />\n              <div className=\"modal-field-description\">\n                {translate('organization.name.description')}\n              </div>\n            </div>\n            <div className=\"modal-field\">\n              <label htmlFor=\"organization-avatar\">{translate('organization.avatar')}</label>\n              <input\n                disabled={this.state.loading}\n                id=\"organization-avatar\"\n                maxLength={256}\n                name=\"avatar\"\n                onChange={this.handleAvatarInputChange}\n                type=\"text\"\n                value={this.state.avatar}\n              />\n              <div className=\"modal-field-description\">\n                {translate('organization.avatar.description')}\n              </div>\n              {!!this.state.avatarImage && (\n                <div className=\"spacer-top spacer-bottom\">\n                  <div className=\"little-spacer-bottom\">\n                    {translate('organization.avatar.preview')}\n                    {':'}\n                  </div>\n                  <img alt=\"\" height={30} src={this.state.avatarImage} />\n                </div>\n              )}\n            </div>\n            <div className=\"modal-field\">\n              <label htmlFor=\"organization-description\">{translate('description')}</label>\n              <textarea\n                disabled={this.state.loading}\n                id=\"organization-description\"\n                maxLength={256}\n                name=\"description\"\n                onChange={e => this.setState({ description: e.target.value })}\n                rows={3}\n                value={this.state.description}\n              />\n              <div className=\"modal-field-description\">\n                {translate('organization.description.description')}\n              </div>\n            </div>\n            <div className=\"modal-field\">\n              <label htmlFor=\"organization-url\">{translate('organization.url')}</label>\n              <input\n                disabled={this.state.loading}\n                id=\"organization-url\"\n                maxLength={256}\n                name=\"url\"\n                onChange={e => this.setState({ url: e.target.value })}\n                type=\"text\"\n                value={this.state.url}\n              />\n              <div className=\"modal-field-description\">\n                {translate('organization.url.description')}\n              </div>\n            </div>\n            <div className=\"modal-field\">\n              <SubmitButton disabled={this.state.loading}>{translate('save')}</SubmitButton>\n              {this.state.loading && <i className=\"spinner spacer-left\" />}\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { updateOrganization: updateOrganization as any };\n\nexport default connect<{}, DispatchProps, OwnProps>(null, mapDispatchToProps)(OrganizationEdit);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from '../helpers/request';\nimport { Paging, Group } from '../app/types';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function searchUsersGroups(data: {\n  f?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n}): Promise<{ groups: Group[]; paging: Paging }> {\n  return getJSON('/api/user_groups/search', data).catch(throwGlobalError);\n}\n\nexport interface GroupUser {\n  login: string;\n  name: string;\n  selected: boolean;\n}\n\nexport function getUsersInGroup(data: {\n  id?: number;\n  name?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n  selected?: string;\n}): Promise<{ paging: Paging; users: GroupUser[] }> {\n  return getJSON('/api/user_groups/users', data).catch(throwGlobalError);\n}\n\nexport function addUserToGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/add_user', data).catch(throwGlobalError);\n}\n\nexport function removeUserFromGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/remove_user', data).catch(throwGlobalError);\n}\n\nexport function createGroup(data: {\n  description?: string;\n  organization: string | undefined;\n  name: string;\n}): Promise<Group> {\n  return postJSON('/api/user_groups/create', data).then(r => r.group, throwGlobalError);\n}\n\nexport function updateGroup(data: { description?: string; id: number; name?: string }) {\n  return post('/api/user_groups/update', data).catch(throwGlobalError);\n}\n\nexport function deleteGroup(data: { name: string; organization: string | undefined }) {\n  return post('/api/user_groups/delete', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport * as api from '../../api/organizations';\nimport * as actions from '../../store/organizations/duck';\nimport * as membersActions from '../../store/organizationsMembers/actions';\nimport { searchUsersGroups, addUserToGroup, removeUserFromGroup } from '../../api/user_groups';\nimport { receiveUser } from '../../store/users/actions';\nimport { onFail } from '../../store/rootActions';\nimport { getOrganizationMembersState } from '../../store/rootReducer';\nimport { addGlobalSuccessMessage } from '../../store/globalMessages/duck';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\nimport { Organization, OrganizationMember, OrganizationBase } from '../../app/types';\n\nconst PAGE_SIZE = 50;\n\nconst onRejected = (dispatch: Dispatch<any>) => (error: any) => {\n  onFail(dispatch)(error);\n  return Promise.reject(error);\n};\n\nexport const fetchOrganization = (key: string) => (dispatch: Dispatch<any>) => {\n  return Promise.all([api.getOrganization(key), api.getOrganizationNavigation(key)]).then(\n    ([organization, navigation]) => {\n      if (organization) {\n        const organizationWithPermissions = { ...organization, ...navigation };\n        dispatch(actions.receiveOrganizations([organizationWithPermissions]));\n      }\n    },\n    onFail(dispatch)\n  );\n};\n\nexport const fetchOrganizationGroups = (organization: string) => (dispatch: Dispatch<any>) => {\n  return searchUsersGroups({ organization }).then(response => {\n    dispatch(actions.receiveOrganizationGroups(organization, response.groups));\n  }, onFail(dispatch));\n};\n\nexport const createOrganization = (organization: OrganizationBase) => (dispatch: Dispatch<any>) => {\n  return api.createOrganization(organization).then((organization: Organization) => {\n    dispatch(actions.createOrganization(organization));\n    dispatch(\n      addGlobalSuccessMessage(translateWithParameters('organization.created', organization.name))\n    );\n    return organization;\n  }, onRejected(dispatch));\n};\n\nexport const updateOrganization = (key: string, changes: OrganizationBase) => (\n  dispatch: Dispatch<any>\n) => {\n  return api.updateOrganization(key, changes).then(() => {\n    dispatch(actions.updateOrganization(key, changes));\n    dispatch(addGlobalSuccessMessage(translate('organization.updated')));\n  }, onFail(dispatch));\n};\n\nexport const deleteOrganization = (key: string) => (dispatch: Dispatch<any>) => {\n  return api.deleteOrganization(key).then(() => {\n    dispatch(actions.deleteOrganization(key));\n    dispatch(addGlobalSuccessMessage(translate('organization.deleted')));\n  }, onFail(dispatch));\n};\n\nconst fetchMembers = (\n  data: {\n    organization: string;\n    p?: number;\n    ps?: number;\n    q?: string;\n  },\n  dispatch: Dispatch<any>,\n  receiveAction: Function\n) => {\n  dispatch(membersActions.updateState(data.organization, { loading: true }));\n  if (data.ps === undefined) {\n    data.ps = PAGE_SIZE;\n  }\n  if (!data.q) {\n    data.q = undefined;\n  }\n  return api.searchMembers(data).then(\n    response => {\n      dispatch(\n        receiveAction(data.organization, response.users, {\n          loading: false,\n          total: response.paging.total,\n          pageIndex: response.paging.pageIndex,\n          query: data.q || null\n        })\n      );\n    },\n    (error: any) => {\n      onFail(dispatch)(error);\n      dispatch(membersActions.updateState(data.organization, { loading: false }));\n    }\n  );\n};\n\nexport const fetchOrganizationMembers = (key: string, query?: string) => (\n  dispatch: Dispatch<any>\n) => fetchMembers({ organization: key, q: query }, dispatch, membersActions.receiveMembers);\n\nexport const fetchMoreOrganizationMembers = (key: string, query?: string) => (\n  dispatch: Dispatch<any>,\n  getState: () => any\n) =>\n  fetchMembers(\n    { organization: key, p: getOrganizationMembersState(getState(), key).pageIndex + 1, q: query },\n    dispatch,\n    membersActions.receiveMoreMembers\n  );\n\nexport const addOrganizationMember = (key: string, member: OrganizationMember) => (\n  dispatch: Dispatch<any>\n) => {\n  return api\n    .addMember({ login: member.login, organization: key })\n    .then(user => dispatch(membersActions.addMember(key, user)), onFail(dispatch));\n};\n\nexport const removeOrganizationMember = (key: string, member: OrganizationMember) => (\n  dispatch: Dispatch<any>\n) => {\n  dispatch(membersActions.removeMember(key, member));\n  return api.removeMember({ login: member.login, organization: key }).catch((error: any) => {\n    onFail(dispatch)(error);\n    dispatch(membersActions.addMember(key, member));\n  });\n};\n\nexport const updateOrganizationMemberGroups = (\n  organization: Organization,\n  member: OrganizationMember,\n  add: string[],\n  remove: string[]\n) => (dispatch: Dispatch<any>) => {\n  dispatch(\n    receiveUser({\n      ...member,\n      groupCount: (member.groupCount || 0) + add.length - remove.length\n    })\n  );\n  const promises = [\n    ...add.map(name =>\n      addUserToGroup({ name, login: member.login, organization: organization.key })\n    ),\n    ...remove.map(name =>\n      removeUserFromGroup({ name, login: member.login, organization: organization.key })\n    )\n  ];\n  return Promise.all(promises).catch(error => {\n    dispatch(receiveUser(member));\n    onFail(dispatch)(error);\n  });\n};\n"],"sourceRoot":""}