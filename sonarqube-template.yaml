apiVersion: v1
kind: Template
metadata:
  name: sonarx9r
objects:
- apiVersion: "v1"
  kind: "BuildConfig"
  metadata:
    name: "sonarx9r"
  spec:
    source:
      type: Git
      git:
        ref: master
        uri: "https://github.com/szathiago/docker-openshift-sonarqube"
    strategy:
      type: "Docker"
    output:
      to:
        kind: "ImageStreamTag"
        name: "sonarx9r:latest"
    triggers:
    - type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: sonarx9r
    name: sonarx9r
  spec:
    tags:
    - name: "latest"
      annotations: null
      importPolicy:
        insecure: true
      referencePolicy:
        type: Source
    triggers:
    - type: ConfigChange
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: "${DATABASE_SERVICE_NAME}"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: "${DATABASE_VOLUME_CAPACITY}"
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: sonarx9r
    name: postgresqlx9r
  spec:
    replicas: 1
    selector:
      name: postgresqlx9r
    strategy:
      recreateParams:
        timeoutSeconds: 900
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: postgresqlx9r
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            value: "${POSTGRESQL_USER}"
          - name: POSTGRESQL_PASSWORD
            value: "${POSTGRESQL_PASSWORD}"
          - name: POSTGRESQL_DATABASE
            value: "${POSTGRESQL_DATABASE}"
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:a0bfc4aa195737c802988f7c636073644d7a821061d801004277c98d776c9cbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresqlx9r
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 4024Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data-x9r
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data-x9r
          persistentVolumeClaim:
            claimName: "${DATABASE_SERVICE_NAME}"
    triggers:
    - type: ConfigChange
    test: false
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: sonarx9r
    name: sonarx9r
  spec:
    replicas: 1
    selector:
      app: sonarx9r
      deploymentconfig: sonarx9r
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
        creationTimestamp: null
        labels:
          app: sonarx9r
          deploymentconfig: sonarx9r
      spec:
        containers:
        - env:
          - name: SONARQUBE_JDBC_PASSWORD
            value: "${POSTGRESQL_PASSWORD}"
          - name: SONARQUBE_JDBC_URL
            value: "jdbc:postgresql://${DATABASE_SERVICE_NAME}/${POSTGRESQL_DATABASE}"
          - name: SONARQUBE_JDBC_USERNAME
            value: "${POSTGRESQL_USER}"
          image: sonarx9r:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/system/status
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 900
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 4
          name: sonarx9r
          ports:
          - containerPort: 9000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/system/status
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 4
          terminationMessagePath: /dev/termination-log
          resources:
            requests:
              memory: 4024Mi
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - sonarx9r
        from:
          kind: ImageStreamTag
          name: sonarx9r:latest
      type: ImageChange
- kind: Service
  apiVersion: v1
  metadata:
    name: "${DATABASE_SERVICE_NAME}"
    labels:
      app: sonarx9r
  spec:
    ports:
    - name: postgresqlx9r
      protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 0
    selector:
      name: postgresqlx9r
    type: ClusterIP
    sessionAffinity: None
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name":"postgresqlx9r","namespace":"","kind":"Service"}]'
    name: sonarx9r
    labels:
      app: sonarx9r
  spec:
    ports:
    - name: 9000-tcp
      port: 9000
      protocol: TCP
      targetPort: 9000
    selector:
      app: sonarx9r
      deploymentconfig: sonarx9r
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    name: sonarx9r
    labels:
      app: sonarx9r
  spec:
    path: /
    to:
      kind: Service
      name: sonarx9r
    port:
      targetPort: 9000-tcp
parameters:
- name: DATABASE_SERVICE_NAME
  displayName: Database Service Name
  description: The name of the OpenShift Service exposed for the database.
  value: postgresqlx9r
  required: true
- name: DATABASE_VOLUME_CAPACITY
  displayName: Volume Capacity
  description: Volume space available for data, e.g. 512Mi, 2Gi.
  value: 6Gi
  required: true
- name: POSTGRESQL_USER
  displayName: PostgreSQL Connection Username
  description: Username for PostgreSQL user that will be used for accessing the database.
  generate: expression
  from: user[A-Z0-9]{3}
  value: sonar
  required: true
- name: POSTGRESQL_PASSWORD
  displayName: PostgreSQL Connection Password
  description: Password for the PostgreSQL connection user.
  generate: expression
  from: "[a-zA-Z0-9]{16}"
  required: true
- name: POSTGRESQL_DATABASE
  displayName: PostgreSQL Database Name
  description: Name of the PostgreSQL database accessed.
  value: sonar
  required: true
- name: POSTGRESQL_VERSION
  displayName: Version of PostgreSQL Image
  description: Version of PostgreSQL image to be used (9.2, 9.4, 9.5 or latest).
  value: '9.5'
  required: true
